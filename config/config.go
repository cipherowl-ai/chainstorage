// Code generated for package config by go-bindata DO NOT EDIT. (@generated)
// sources:
// config/chainstorage/arbitrum/mainnet/base.yml
// config/chainstorage/arbitrum/mainnet/development.yml
// config/chainstorage/arbitrum/mainnet/local.yml
// config/chainstorage/arbitrum/mainnet/production.yml
// config/chainstorage/avacchain/mainnet/base.yml
// config/chainstorage/avacchain/mainnet/development.yml
// config/chainstorage/avacchain/mainnet/production.yml
// config/chainstorage/bitcoin/mainnet/base.yml
// config/chainstorage/bitcoin/mainnet/development.yml
// config/chainstorage/bitcoin/mainnet/local.yml
// config/chainstorage/bitcoin/mainnet/production.yml
// config/chainstorage/bsc/mainnet/base.yml
// config/chainstorage/bsc/mainnet/development.yml
// config/chainstorage/bsc/mainnet/local.yml
// config/chainstorage/bsc/mainnet/production.yml
// config/chainstorage/dogecoin/mainnet/base.yml
// config/chainstorage/dogecoin/mainnet/development.yml
// config/chainstorage/dogecoin/mainnet/local.yml
// config/chainstorage/dogecoin/mainnet/production.yml
// config/chainstorage/ethereum/goerli/base.yml
// config/chainstorage/ethereum/goerli/development.yml
// config/chainstorage/ethereum/goerli/local.yml
// config/chainstorage/ethereum/goerli/production.yml
// config/chainstorage/ethereum/mainnet/base.yml
// config/chainstorage/ethereum/mainnet/development.yml
// config/chainstorage/ethereum/mainnet/local.yml
// config/chainstorage/ethereum/mainnet/production.yml
// config/chainstorage/optimism/mainnet/base.yml
// config/chainstorage/optimism/mainnet/development.yml
// config/chainstorage/optimism/mainnet/local.yml
// config/chainstorage/optimism/mainnet/production.yml
// config/chainstorage/polygon/mainnet/base.yml
// config/chainstorage/polygon/mainnet/development.yml
// config/chainstorage/polygon/mainnet/local.yml
// config/chainstorage/polygon/mainnet/production.yml
// config/chainstorage/solana/mainnet/base.yml
// config/chainstorage/solana/mainnet/development.yml
// config/chainstorage/solana/mainnet/local.yml
// config/chainstorage/solana/mainnet/production.yml
package config

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _configChainstorageArbitrumMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5b\x6f\x1b\xb7\x12\x7e\xdf\x5f\x31\xf0\x79\xb6\x75\x71\x9c\x73\xb2\xc0\x79\xc8\x0d\xad\x91\xc6\x2e\x02\x17\x05\xfa\x42\xcc\x92\xb3\x5a\x42\xbc\x6c\xc8\x59\x45\xea\xaf\x2f\xb8\xdc\xf5\x4a\xae\x6c\x25\x48\x53\xbf\xad\xc8\xe1\xdc\xbe\x8f\xdf\x50\xff\x81\xbb\x46\x47\xa8\xb5\x21\xd0\x11\x56\xe4\x28\x20\x93\x82\x6a\x07\x67\x16\xd7\x04\xd2\xbb\x5a\xaf\xce\x2e\xe0\xdd\x2d\xdc\xdc\xde\xc1\xfb\x77\xd7\x77\x17\x05\xb6\xba\x2c\x00\x2c\x6e\x85\xeb\xac\xa8\x8c\x97\x6b\x91\xbc\xc4\x12\x16\xf3\xf9\xfc\xe1\x5e\x2c\xe1\x2a\x2d\xa6\x85\x2f\x3e\xac\x29\xf4\x86\x05\x40\xe4\x40\x68\xb5\x5b\x89\x0a\x59\x36\x22\xea\x3f\x69\x30\x9e\xb6\xb4\x63\x0a\x1b\x34\x25\x2c\xe2\xc1\x46\x1f\xc4\x0b\xda\x90\x63\xc1\xda\x52\xf2\x6a\x0b\xfc\x12\x53\x7a\xf8\x25\x0a\x94\xd2\x77\x8e\x4b\x50\xb4\x21\xe3\x5b\x4b\x8e\x0b\x80\xaa\x93\x6b\xe2\x12\xce\xce\x0a\x00\x65\x3e\x27\x73\x00\x45\x06\x77\x22\x92\x8c\x25\xbc\xea\xab\x00\x70\x98\xbc\xd2\x16\x6d\x6b\x48\xc8\x06\xb5\x8b\xec\x03\xae\x68\x28\x4d\x60\xa8\x34\x87\xce\x0a\x8b\xda\x39\x62\xa1\xcc\xe7\xfe\xe8\x46\x47\x5d\x69\xa3\x79\xd7\xe7\xe6\x3b\x1e\x7c\xbf\xec\x7d\xab\x9d\x43\xeb\x55\x95\x63\xe7\x1e\x32\x56\xe6\x1b\xc3\xf5\xa7\x87\x0e\x9c\x3a\x9d\x3b\x75\xda\x87\x68\x48\xaf\x1a\x16\xda\x29\xda\x7e\x8d\xc3\x6a\x37\x1e\x39\xea\x7a\x43\x21\x6a\xef\x48\x89\xd3\x89\x4e\xb6\xa7\x53\x3e\xea\x77\x38\xf7\x54\xee\x8f\xc4\xa8\x76\xe3\x59\x75\x2c\x5e\x1b\x28\xea\x55\x3a\xd5\x05\x23\x68\xdb\xea\x80\xac\xbd\x2b\xe1\x72\x6e\x0b\x80\x40\xab\xfe\x57\x17\xcf\x09\x23\x9f\x2f\x7a\xae\xf6\x11\x07\x7e\x21\xa3\x90\xde\x26\x47\xb1\x37\xfd\xe9\x8f\xeb\x5f\x0b\x89\x8a\x9c\xec\x6d\x50\xa9\xb4\x37\x12\xd3\xa7\xe0\x25\xec\xe7\x7e\x3e\x26\x76\x3e\x25\x16\x88\xc9\xa5\x4c\x44\x4b\x41\x7b\x55\xc2\x7f\x8b\xfe\x4c\x72\x99\x2b\x8a\x8c\x81\x07\x8c\x4a\x98\x17\x13\xe1\x56\x39\x37\x83\x4c\x91\x4b\x58\xf4\xbf\xe2\x80\xd0\x62\x32\xec\x6f\xd7\xd5\x7c\x6e\xe3\xb8\x96\x43\xc0\x9b\x5f\x6e\xdf\x7e\x78\xfb\xf3\xeb\xeb\x1b\xf1\xfa\xd3\x9b\xeb\xbb\x4f\xbf\x7d\x2c\x00\xa4\xd1\xe4\x38\xfb\xb6\x18\x99\x42\xfe\x06\x20\xa7\x5a\xaf\x1d\x8b\x55\xf0\x5d\x3b\x94\x0a\x10\x0d\x6e\xe8\x84\xcd\x06\x8d\x56\xc8\xfe\x69\x5f\x23\x17\x4e\x56\x56\x13\x72\x17\x86\xa0\xc1\x47\x62\x46\xd1\x62\x88\x14\x4a\xa8\xd1\x44\x2a\x00\x74\x08\xd4\xf3\x25\x51\x4b\xe9\xc8\x98\xb0\x4a\x32\x97\x04\x8d\x38\xe9\x59\x09\x37\xef\xef\x7e\xbf\xfd\xf4\xe1\xbe\x03\xe2\xe3\xeb\xeb\x9b\x9b\xf7\x77\x45\x16\x50\x91\x65\xe4\x6f\xa4\x92\xc1\xef\x81\x14\xd0\xad\x68\x90\xc0\x17\x45\xdd\x39\x99\x40\x45\x23\x72\x01\x67\x67\x45\x54\xeb\x9e\x26\x1d\x37\xa2\x21\x54\x29\xd1\xbe\xe6\x7e\x85\xfd\x9a\xdc\xb0\x70\xc0\xf7\x7b\x5a\x35\xcc\x6d\x2c\x67\x33\x57\xf3\x39\xb6\xfa\x42\x7a\xed\x2a\x8c\x74\x21\xbd\x9d\x61\xab\x67\xb4\x6d\x67\xfb\x47\x67\x63\xca\xb3\x21\xe5\xd9\x66\x71\x54\xc8\x03\x45\xae\x3b\x53\x02\x87\x8e\x8a\x48\x61\x93\x11\xaf\xb4\x53\x53\x7c\xe3\x25\x9a\xc6\x47\x2e\x5f\xcd\x5f\xcd\x8b\x68\x70\xaa\x7e\x10\x10\x45\x86\xb1\x84\xe5\x7c\x7e\xc0\xbd\x71\x7d\x61\x2f\xe7\x89\x81\xb4\x6d\x49\x32\xa9\x3e\x8d\xda\xf8\x2c\xf9\xe7\x60\xbd\xd3\xec\x43\xff\xdd\x7a\x63\x28\x7f\xe6\x99\x41\x61\x76\x4f\x8e\xff\xa7\x3a\x92\x26\xfb\x5a\xc4\x9d\x93\xc2\x79\xb5\x0f\x70\x4e\x80\x75\x6a\xf1\xb2\xff\xb2\x09\x1b\x27\x49\x18\x8c\x9c\x95\xa2\x84\xa5\x2d\x0e\x32\xa8\x50\xae\x6b\x9d\xe2\x66\x5a\xa1\x64\xbd\x49\x23\x20\x10\x87\x5d\x9a\x58\xda\x76\x56\x20\x33\xd9\x96\x63\x09\x97\x87\x66\x51\x36\xa4\x3a\x43\x82\xfd\x70\x69\x87\xd9\x51\xc2\x95\x7d\x60\x9a\xb7\xbd\x90\xc6\x47\x9a\xec\x16\xf3\x6c\xb8\x3f\x51\x97\x57\xc3\x3c\x93\x0d\xc9\x75\xbe\x33\xe3\xac\x1d\x76\xd2\x30\x0d\xd4\x06\x2f\x29\x46\x52\x49\x4b\xf2\x50\x4e\xfa\x96\x67\x61\x67\x85\xf4\x4e\x76\x21\xa4\x26\xd2\x96\x03\x4a\xf6\x89\x03\x97\x83\x13\xc6\xb8\x16\x46\xc7\x7e\xe2\xd6\xd8\x99\x2c\xd4\x63\x8b\x84\x22\xa9\x93\xf4\x4d\xd9\x2e\xed\xa1\x05\x6d\x49\x76\x7c\x68\xf2\xa2\x39\xb4\xd1\x2a\xe9\x1d\xef\xca\xfb\xa5\x8b\xa9\xef\x09\x04\x72\xb2\xb1\x98\xf8\xf9\xec\x28\xc8\x46\x9b\x89\xa5\x7b\xe5\x3d\x76\xf0\xe5\x70\xf0\xf9\x5a\x39\x75\x2f\x09\x49\xf0\x31\x8a\x07\xca\x7b\xb2\x9f\x57\x3f\x90\xd5\x72\xed\xeb\xfa\xe1\xa3\xf0\x90\xee\x8b\xc7\xd8\xbe\x18\xd9\xde\x62\x40\x63\xc8\xe8\x68\x93\xd8\x3e\xd1\xf0\xa1\xf4\x61\xbc\x4a\x72\x9c\x06\x7a\x56\xbd\x7f\x03\x8e\x07\x00\xa4\xb7\x75\xd6\xb8\xaf\x84\xe2\x7f\xcf\x0b\xc5\xd5\xe3\xba\xf3\x8d\x40\xfc\xf8\x56\x4f\xc3\x23\x8f\x8e\x07\x1d\x6e\x08\x03\x57\x84\x4f\xb4\xec\xfb\x41\x58\x7e\x37\x08\x97\xf1\x04\xf7\xeb\x34\xbf\xd2\xcc\x9b\x5e\x39\x59\xfe\x87\xbf\x18\x29\xa9\x34\x11\xd3\x04\x90\x3b\x69\xf6\x2e\xd4\x11\xb4\x62\x7e\xcc\x0a\x19\x08\xf9\x18\x2a\xa3\x01\xb9\xf4\xf4\x52\xfb\x41\x9f\x0d\xe9\xfb\xa7\xc1\xf8\x30\xf8\xc7\x75\xed\x6b\x71\x5c\x9e\x80\xf1\xf0\x2e\x9d\xb8\x4c\xcf\xd6\xcf\xb1\x8d\x45\x36\x4b\xef\xc2\xfe\xdd\x75\x24\xa1\xbf\x02\x00\x00\xff\xff\xc5\x41\xee\x72\x75\x10\x00\x00")

func configChainstorageArbitrumMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageArbitrumMainnetBaseYml,
		"config/chainstorage/arbitrum/mainnet/base.yml",
	)
}

func configChainstorageArbitrumMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageArbitrumMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/arbitrum/mainnet/base.yml", size: 4213, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageArbitrumMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xbb\x6e\xeb\x30\x10\x84\xe1\x9e\x4f\xb1\xf0\xa9\x45\xe8\xc4\x08\x02\xb3\x76\x8a\x34\x71\xa3\x5e\x58\x91\x63\x89\x10\x2f\x02\xb9\x92\x93\xb7\x0f\x4c\x04\x99\x69\x7f\x7c\xff\x68\x58\x7c\xa5\xbb\x0f\x20\x5f\x69\x46\x42\x61\x81\xa3\xe9\x9b\x4e\x91\x57\x90\xcd\xe9\xee\xe7\x93\xa6\xeb\x8d\x3e\x6f\x03\xbd\x5f\x3f\x06\xad\xf8\x51\x8d\x22\xe2\x47\x1d\xd9\xda\xbc\x27\x31\xe4\x70\x20\xe4\x2d\x22\x89\x22\x9a\x76\xbb\x42\x0c\xe1\x8b\xe3\x16\xd0\xd9\x85\x7d\xaa\x92\x0b\xcf\xe8\xb8\x4c\x5e\xca\x1e\xbb\xc8\x3e\x25\x48\xe7\x70\x28\xcb\x0e\xc9\xa2\xb9\xce\x15\xd4\x6a\x48\x10\xb7\x5c\x38\x3c\x03\xfd\x4b\x69\x9b\xa3\x79\x7b\x39\x9f\x55\x33\x9f\xfd\x14\xb2\x5d\xc7\x2a\x5c\x64\x5c\xe0\xe7\x45\x0c\xfd\x7f\xed\xdb\x54\x45\x39\x50\x5a\xe6\x93\x1b\xff\xec\x5e\xb7\x9b\x4b\x7f\xe9\xd5\x4f\x00\x00\x00\xff\xff\xb0\x89\x54\x72\x09\x01\x00\x00")

func configChainstorageArbitrumMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageArbitrumMainnetDevelopmentYml,
		"config/chainstorage/arbitrum/mainnet/development.yml",
	)
}

func configChainstorageArbitrumMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageArbitrumMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/arbitrum/mainnet/development.yml", size: 265, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageArbitrumMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageArbitrumMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageArbitrumMainnetLocalYml,
		"config/chainstorage/arbitrum/mainnet/local.yml",
	)
}

func configChainstorageArbitrumMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageArbitrumMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/arbitrum/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageArbitrumMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x6e\xc3\x30\x0c\x84\xe1\x5d\x4f\x71\x48\x67\x1b\x46\x33\x14\xd1\x9c\x0e\x5d\x9a\xc5\x7b\x40\x53\x8c\x43\xc4\xa2\x0c\x4a\x6e\xda\xb7\x2f\x12\x14\xc5\xad\xf7\x7f\x2f\x18\xaf\x5a\x71\xd1\x45\xa0\x15\xb3\x98\x38\x35\x49\x98\x7e\xb0\xcb\x74\x13\x70\xb1\x8b\xce\xbb\x1e\xc7\x13\x3e\x4f\x23\xde\x8f\x1f\x63\x1f\xe8\x5e\x63\x00\xe8\x5e\xcf\xc4\x5c\x36\x6b\x11\xab\x97\xb4\x71\xd3\x62\x01\x98\x36\xbe\x49\x8b\x90\x6f\xca\xeb\x22\x1d\x5f\x49\xad\xb6\xe2\x34\x4b\x47\x3e\x69\xf3\x2d\x77\x99\xd4\x4c\x5a\xf7\x48\x03\x53\x12\x63\x79\xba\x29\xb9\xd4\x1a\xd1\x24\xaf\xc5\x69\xe9\xff\x9c\x9e\x4b\x8e\x6f\xaf\xfb\x7d\xa8\xe2\x5f\xe2\x8f\xf3\xa4\x96\xce\xff\xc5\xd0\x3f\x17\x0f\xc3\x61\x08\xbf\x01\x00\x00\xff\xff\x86\xa4\x5c\x69\xdf\x00\x00\x00")

func configChainstorageArbitrumMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageArbitrumMainnetProductionYml,
		"config/chainstorage/arbitrum/mainnet/production.yml",
	)
}

func configChainstorageArbitrumMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageArbitrumMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/arbitrum/mainnet/production.yml", size: 223, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageAvacchainMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x4d\x6f\x1b\x37\x10\xbd\xef\xaf\x18\xb8\x67\x5b\x1f\x89\xd3\x66\x81\x1e\xdc\x24\x68\x8d\xb4\x76\x51\x18\x2d\xd0\x0b\x31\x4b\xce\x6a\x09\x71\xc9\x0d\x39\xab\x48\xfd\xf5\x05\xc9\x95\x56\x8a\x65\xcb\x41\xea\xfa\xb6\x22\x87\xc3\xe1\xbc\xc7\xf7\xa8\xef\xe0\xae\xd1\x01\x6a\x6d\x08\x74\x80\x05\x59\xf2\xc8\xa4\xa0\xda\xc0\x59\x8b\x4b\x02\xe9\x6c\xad\x17\x67\x17\xf0\xfe\x16\x6e\x6e\xef\xe0\xc3\xfb\xeb\xbb\x8b\x02\x3b\x5d\x16\x00\x2d\xae\x85\xed\x5b\x51\x19\x27\x97\x22\x66\x09\x25\xcc\xa6\xd3\xe9\x97\x73\xa1\x84\xcb\x38\x18\x07\x3e\x3b\xbf\x24\x9f\x02\x0b\x80\xc0\x9e\xb0\xd5\x76\x21\x2a\x64\xd9\x88\xa0\xff\xa1\x21\x78\x9c\xd2\x96\xc9\xaf\xd0\x94\x30\x0b\x07\x13\x69\x13\x27\x68\x45\x96\x05\xeb\x96\x62\xd6\xb6\xc0\xcf\x21\x96\x87\x9f\x83\x40\x29\x5d\x6f\xb9\x04\x45\x2b\x32\xae\x6b\xc9\x72\x01\x50\xf5\x72\x49\x5c\xc2\xd9\x59\x01\xa0\xcc\xa7\x18\x0e\xa0\xc8\xe0\x46\x04\x92\xa1\x84\xb7\xe9\x14\x00\x16\x63\x56\x5a\x63\xdb\x19\x12\xb2\x41\x6d\x03\x3b\x8f\x0b\x1a\x8e\x26\x70\x85\x32\x8d\x8b\x16\xb5\xb5\xc4\x42\x99\x4f\x69\xed\x4a\x07\x5d\x69\xa3\x79\x93\x8a\x73\x3d\x0f\xc9\xdf\xa4\xe4\x6a\x63\xb1\x75\xaa\xca\x9b\xe7\x26\x32\x56\xe6\x6b\xf7\x4b\xcb\x87\x1e\x9c\x5a\x9e\x7b\xf5\x84\x24\xa2\x21\xbd\x68\x58\x68\xab\x68\xfd\x94\x8c\xd5\x66\xbb\xe4\x78\xee\x15\xf9\xa0\x9d\x25\x25\x4e\x97\x3a\xc6\x3e\xa1\xe8\xa3\x89\x87\x85\x8f\x55\xff\xc0\x26\xd5\x66\xbb\x56\x1d\xdd\xb0\xf3\x14\xf4\x22\x2e\xeb\xbd\x11\xb4\xee\xb4\x47\xd6\xce\x96\xf0\x6a\xda\x16\x00\x9e\x16\xe9\x57\x1f\xce\x09\x03\x9f\xcf\x12\x63\xd3\x96\x03\xcb\x90\x51\x48\xd7\xc6\x44\x21\x85\xfe\xfc\xf7\xf5\xef\x85\x44\x45\x56\xa6\x18\x54\x2a\xce\x6d\xe9\xe9\xe2\xe6\x25\xec\x17\x7f\xbe\xab\xec\x7c\xac\xcc\x13\x93\x8d\xa5\x88\x8e\xbc\x76\xaa\x84\xef\x8b\x14\x13\x73\xe6\x33\x05\x46\xcf\x03\x4e\x25\x4c\x8b\x91\x76\x8b\x5c\x9c\x41\xa6\xc0\x25\xcc\xd2\xaf\x30\x80\x34\x1b\x03\xd3\x25\x9b\x87\xed\x40\xce\x0f\x3f\xfd\x7a\xfb\xee\xe3\xbb\x5f\xae\xae\x6f\xc4\xd5\x9f\x57\xef\xd2\x57\x01\x20\x8d\x26\xcb\x39\x73\x8b\x81\xc9\xe7\x6f\x00\xb2\xaa\x73\xda\xb2\x58\x78\xd7\x77\xc3\x49\x01\x82\xc1\x15\x9d\x88\x59\xa1\xd1\x0a\xd9\x3d\x9e\x6b\xcb\x85\x93\xe7\xaa\x09\xb9\xf7\xc3\xa6\xde\x05\x62\x46\xd1\xa1\x0f\xe4\x4b\xa8\xd1\x04\x2a\x00\xb4\xf7\x94\xf8\x12\xa9\xa5\x74\x60\x8c\x50\x45\xad\x8b\xaa\x46\x1c\x45\xad\x84\x9b\x0f\x77\x7f\xdd\xfe\xf1\x71\x6c\x81\xf8\xed\xea\xfa\xe6\xe6\xc3\x5d\x91\x65\x54\x64\x31\xb9\xcf\x2a\xe9\xdd\x1e\x48\x1e\xed\x82\x06\x25\x7c\x5d\xd4\xbd\x95\x11\x54\x34\x22\x1f\xe1\xec\xac\x08\x6a\x99\x78\xd2\x73\x23\x1a\x42\x15\x4b\x4d\xa7\x4e\x23\xec\x96\x64\x87\x81\x03\xc6\xef\x78\xd5\x30\x77\xa1\x9c\x4c\x6c\xcd\xe7\xd8\xe9\x0b\xe9\xb4\xad\x30\xd0\x85\x74\xed\x04\x3b\x3d\xa1\x75\x37\xd9\x5f\x3a\xd9\xd5\x3c\x19\x6a\x9e\xac\x66\x47\x05\xdd\x53\xe0\xba\x37\x25\xb0\xef\xa9\x08\xe4\x57\x19\xf4\x4a\x5b\x35\x16\x60\x9c\x44\xd3\xb8\xc0\xe5\xdb\xe9\xdb\x69\x11\x0c\x8e\xc7\x1f\x54\x44\x91\x61\x2c\x61\x3e\x3d\xe0\xde\x76\xf8\x32\x5e\x35\x5a\x77\x24\x99\x54\x2a\xa1\x36\x2e\xcb\xfe\x39\xb4\xce\x6a\x76\x3e\x7d\x77\xce\x18\xca\x9f\xd9\x37\xc8\x4f\x76\xdc\xf8\x71\x96\x26\xe2\x8d\x34\xb8\xa4\xc9\xee\x32\x0c\x13\xd2\xbb\x10\xc4\x8e\x70\x05\x40\xd4\x70\x57\x8b\xb0\xb1\x52\x58\xa7\xf6\xc9\x90\x4c\x8b\x75\xc4\x62\x9e\xbe\xda\x08\xa2\x95\x24\x0c\x06\xce\xa2\x92\xfd\xe9\xa0\xdc\x0a\xe5\xb2\xd6\xb1\xc8\x4c\x41\x94\xac\x57\xd1\x32\x3c\xb1\xdf\x44\x8b\xd3\x6d\xdf\x0a\x64\xa6\xb6\xe3\x50\xc2\xab\xc3\xb0\x20\x1b\x52\xbd\x21\xc1\x6e\xb8\xde\x83\xd7\x0c\x4d\xda\x0f\xcd\xd3\x4e\x48\xe3\x02\x8d\x71\xb3\x69\x0e\xdc\xb7\xe0\xf9\xe5\x60\x80\xb2\x21\xb9\xcc\xf7\x6b\x6b\xce\xc3\x4c\x74\x5f\x4f\x9d\x77\x92\x42\x20\x15\x55\x27\xbb\x78\x94\xc2\x6c\x9e\x7d\x2b\xa4\xb3\xb2\xf7\x3e\x76\x9c\xd6\xec\x51\xb2\xcb\x64\xc9\x21\x8c\x61\x29\x8c\x0e\xc9\xa2\x6b\xec\x4d\x16\xf5\x6d\x8b\x84\x22\xa9\xa3\x4a\x8e\xd5\xce\xdb\xc3\x08\x5a\x93\xec\xf9\x30\xe4\x75\x73\x18\xa3\x55\x54\x46\xde\x94\xbb\xa1\x8b\xb1\xef\x11\x04\xb2\xb2\x69\x31\x12\xf9\xc5\x51\x90\x8d\x36\x23\xa5\xf7\x8e\xf7\xd0\xc2\x37\xc3\xc2\x97\x6b\xe5\xd8\xbd\x28\x39\x87\x97\xe6\x89\xfd\xbc\x7c\x46\x56\xcb\xa5\xab\xeb\xbd\x57\xe4\xe5\x74\xda\x86\x7b\x8c\x9f\x4d\x1f\x62\xfc\x6e\xa6\x43\x8f\xc6\x90\xd1\xa1\x8d\xd2\xfc\x48\xd3\x87\xe3\x0f\x66\x2c\xc9\x72\xf4\xff\xc1\x7e\x9e\x1f\x91\xfb\xc2\x35\x68\xe2\x13\xd1\xf8\xe1\x7f\x44\x63\x36\xbd\x8f\xc5\xe5\xc3\xda\xf3\x95\x40\x3c\x7f\xaf\x47\xb7\xc9\x5e\xf3\x45\x8b\x1b\x42\xcf\x15\xe1\x23\x3d\xfb\x76\x14\xe6\xdf\x8c\xc2\xab\x70\x82\xfb\x75\x34\xb1\xe8\x7b\xe3\xab\x28\x5b\xc0\xf0\xb7\x24\x16\x15\x5d\x31\xba\x80\xdc\x48\x43\xa3\xc6\x1f\x41\x2b\xe4\xb7\xaf\x90\x9e\x90\x8f\xa1\xb2\x0d\x20\x1b\x9f\x6a\x6a\x7f\xd3\x17\x43\x7a\xf7\x96\xd8\xbe\x24\xfe\x73\x6d\x7b\x2a\x8e\xf3\x13\x30\x1e\xde\xa5\x13\x97\xe9\xc5\xfa\xb9\x6d\x63\x91\xc3\xe2\x23\x32\x3d\xbb\x8e\x14\xf4\x6f\x00\x00\x00\xff\xff\x64\x6a\x13\xec\xaa\x10\x00\x00")

func configChainstorageAvacchainMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageAvacchainMainnetBaseYml,
		"config/chainstorage/avacchain/mainnet/base.yml",
	)
}

func configChainstorageAvacchainMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageAvacchainMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/avacchain/mainnet/base.yml", size: 4266, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageAvacchainMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xb1\x4e\xc4\x30\x0c\x86\xf7\x3c\x85\x75\xcc\xad\x0a\x27\x81\x2e\xf3\x31\xb0\x70\xcb\xed\x95\x9b\xb8\x6d\xd4\x24\xae\x62\x5f\x0b\x6f\x8f\x2e\x9c\xd8\xb0\x27\x5b\x9f\x3f\xeb\x7f\x82\xeb\x1c\x04\xc6\x10\x09\x82\xc0\x44\x99\x0a\x2a\x79\x18\xbe\xe1\x90\x70\x21\x70\x9c\xc7\x30\x1d\x5a\x38\x5f\xe0\xf3\x72\x85\xf7\xf3\xc7\xb5\x35\xb8\x8b\x35\x00\xb8\x4b\x8f\xce\xf1\x2d\xab\x05\x4f\x1b\x45\x5e\x13\x65\x35\x00\xc3\xcd\x2d\xa4\x16\xe8\x0b\xd3\x1a\xa9\x71\x33\x86\x2c\xca\x05\x27\x6a\x70\x43\x57\x17\x4d\xc2\x90\x33\x69\xe3\x69\x33\x0e\x3d\x65\x47\x55\xec\x7d\x21\x11\x0b\x4a\x69\xe5\x82\xf1\x0e\xb4\x0f\x57\xeb\x38\xd9\xb7\x97\xe3\xd1\x54\xc7\x9d\x1f\x22\xbb\xa5\x17\xc5\xa2\xfd\x4c\x61\x9a\xd5\xc2\xf3\x6b\x57\xcb\x08\x95\x8d\x4a\xc5\x42\xf6\xfd\x9f\xbb\x6b\x6b\xdb\x53\x77\xea\xcc\xce\x65\x19\x23\xff\xe6\x72\x85\x45\xfa\x0d\x63\xf0\xa8\x5c\x4f\x01\x1e\x63\xe0\xfc\xdf\xa3\x9f\x00\x00\x00\xff\xff\x23\xb5\x99\xb5\x4e\x01\x00\x00")

func configChainstorageAvacchainMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageAvacchainMainnetDevelopmentYml,
		"config/chainstorage/avacchain/mainnet/development.yml",
	)
}

func configChainstorageAvacchainMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageAvacchainMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/avacchain/mainnet/development.yml", size: 334, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageAvacchainMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8c\x31\x6f\xc2\x30\x10\x85\x77\xff\x8a\x27\x3a\xc7\x8a\xca\x50\xe1\x99\x0e\x5d\xca\x92\x1d\x5d\xce\x47\xb0\x88\xcf\x91\xcf\x81\xf6\xdf\x57\x44\x15\x7a\xdb\xd3\xf7\x7d\x6f\x18\xae\xc9\x70\x49\xb3\x20\x19\x26\x51\xa9\xd4\x24\x62\xfc\xc5\x2e\xd3\x4d\xc0\x45\x2f\x69\xda\x79\x1c\x4f\xf8\x3e\x0d\xf8\x3c\x7e\x0d\xde\xd1\xc3\x82\x03\xe8\x61\x67\x62\x2e\xab\xb6\x80\xa5\x96\xb8\x72\x4b\x45\x1d\x30\xae\x7c\x93\x16\x20\x3f\x94\x97\x59\x3a\xbe\x52\x52\x6b\xa5\xd2\x24\x1d\xdd\x89\xb7\xa3\xcb\x94\x54\xa5\x75\x4f\xd7\x31\x45\x51\x96\x2d\x1c\x63\x15\xb3\x80\x26\x79\x29\x95\x66\xff\x1f\xf2\x5c\x72\xf8\x78\xdf\xef\x9d\x49\xbd\x4b\x7d\xc2\x63\xd2\x78\x7e\x19\xbd\xdf\x16\x0e\xfd\xa1\x77\x7f\x01\x00\x00\xff\xff\xd2\xcf\x66\x71\xe0\x00\x00\x00")

func configChainstorageAvacchainMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageAvacchainMainnetProductionYml,
		"config/chainstorage/avacchain/mainnet/production.yml",
	)
}

func configChainstorageAvacchainMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageAvacchainMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/avacchain/mainnet/production.yml", size: 224, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBitcoinMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5b\x6f\x1b\x37\x13\x7d\xdf\x5f\x31\xf0\xf7\x6c\xeb\x92\x28\x5f\xb3\x6f\xb9\xa1\x35\xd2\xda\x45\x61\xa0\x40\x5f\x88\x11\x39\xab\x25\xc4\x25\x37\xe4\xac\x22\xf5\xd7\x17\xbc\x28\x2b\x29\x76\x64\xa3\x4d\xfc\xa6\xdd\x1d\xce\xed\x1c\xce\x19\xfd\x0f\xee\x5a\x1d\xa0\xd1\x86\x40\x07\x58\x91\x25\x8f\x4c\x0a\x96\x3b\xb8\xe8\x70\x4d\x20\x9d\x6d\xf4\xea\xe2\x0a\xde\xdf\xc2\xcd\xed\x1d\x7c\x78\x7f\x7d\x77\x55\x61\xaf\xeb\x0a\xa0\xc3\xad\xb0\x43\x27\x96\xc6\xc9\xb5\x88\x5e\x42\x0d\xb3\xe9\x74\x7a\xfa\x2d\xd4\xb0\xa8\x00\xe2\xf3\x67\xe7\xd7\xe4\x93\x5d\x05\x10\xd8\x13\x76\xda\xae\xc4\x12\x59\xb6\x22\xe8\xbf\xa9\x86\xc5\xf1\x27\x6d\x99\xfc\x06\x4d\x0d\xb3\x70\xf4\x21\xc5\x70\x82\x36\x64\x59\xb0\xee\xa8\x86\x17\xd3\xae\xc2\xcf\x21\x66\x87\x9f\x83\x40\x29\xdd\x60\xb9\x06\x45\x1b\x32\xae\xef\xc8\x72\x05\xb0\x1c\xe4\x9a\xb8\x86\x8b\x8b\x0a\x40\x99\x4f\xd1\x1c\x40\x91\xc1\x9d\x08\x24\x43\x0d\xaf\x53\x11\x00\x16\xa3\x57\xda\x62\xd7\x1b\x12\xb2\x45\x6d\x03\x3b\x8f\x2b\x2a\x95\x89\xa5\x66\xe9\xb4\x15\x1d\x6a\x6b\x89\x85\x32\x9f\xd2\xc9\x8d\x0e\x7a\xa9\x8d\xe6\x5d\x4a\xcd\x0d\x5c\x5c\xbf\x4a\xae\xd5\xce\x62\xe7\xd4\x32\x87\xce\x1d\x64\x5c\x9a\xa7\x45\x4b\x87\x4b\xfd\xe7\x0e\xe7\x3e\x9d\x75\x21\x5a\xd2\xab\x96\x85\xb6\x8a\xb6\x8f\xf2\xb7\xdb\x1f\xb9\xcf\xf3\x86\x7c\xd0\xce\x92\x12\xe7\xd3\x1c\x6d\xcf\x26\x7c\xaf\xdb\x72\xec\x5b\x99\x3f\x14\x62\xb7\x3f\xab\xee\x09\xd7\x7b\x0a\x7a\x15\x0f\x0d\xde\x08\xda\xf6\xda\x23\x6b\x67\x33\xdd\x00\x3c\xad\xd2\xd3\x10\x2e\x09\x03\x5f\xce\x12\x4b\x53\xc0\xc2\x2c\x64\x14\xd2\x75\xd1\x51\x48\xa6\x3f\xff\x75\xfd\x7b\x25\x51\x91\x95\xc9\x06\x95\x8a\xdf\xf6\x94\x74\x31\x78\x0d\x87\xa9\x5f\x96\xbc\x2e\xc7\xbc\x3c\x31\xd9\x98\x88\xe8\xc9\x6b\xa7\x6a\xf8\x7f\x95\x8e\x44\x8f\xb9\x9e\xc0\xe8\xb9\xe0\x53\xc3\xb4\x1a\xa9\xb6\xca\xa9\x19\x64\x0a\x5c\xc3\x3c\x3d\x85\x02\xcf\x7c\x34\x4c\xd7\x6a\x96\xea\x4c\x6f\x72\x00\x78\xfb\xeb\xed\xbb\x8f\xef\x7e\x79\x73\x7d\x23\xde\x5e\xdf\xbd\xbb\xbd\xbe\xa9\x00\xa4\xd1\x64\x39\x3b\xee\x30\x30\xf9\xfc\x1b\x80\xac\xea\x9d\xb6\x2c\x56\xde\x0d\x7d\x29\x13\x20\x18\xdc\xd0\x19\x9b\x0d\x1a\xad\x90\xdd\xb7\x7d\xed\x69\x70\x52\xd6\xf4\xa8\xac\xf8\xd4\x10\xf2\xe0\x4b\x50\xef\x02\x31\xa3\xe8\xd1\x07\xf2\x35\x34\x68\x02\x55\x00\xda\x7b\x4a\x54\x89\xac\x52\x3a\x30\x46\x9c\xe0\x45\x1c\x62\xc4\x71\x86\xd5\x70\xf3\xe1\xee\xcf\xdb\x3f\x3e\xee\xcb\x17\xbf\xbd\xb9\xbe\xb9\xf9\x70\x57\xe5\x91\x29\xf2\xe4\x38\x25\x93\xf4\xee\x00\x1d\x8f\x76\x45\x65\xe8\xc5\x96\x2b\x1d\x12\x8f\x95\xf9\x24\x7a\xef\x24\x85\xe0\x7c\x0d\xec\x07\xaa\x9a\xc1\xca\x88\x35\x1a\x91\x4b\xbb\xb8\xa8\x82\x5a\x27\xf2\x0c\xdc\x8a\x96\x50\xc5\x12\x52\x37\xd2\x1b\x76\x6b\xb2\xe5\xc5\xd1\x25\xf8\x42\xb6\x96\xb9\x0f\xf5\x64\x62\x1b\xbe\xc4\x5e\x5f\xc5\x54\x97\x18\xe8\x4a\xba\x6e\x82\xbd\x9e\xd0\xb6\x9f\x1c\x1e\x9d\x94\x7a\x26\xa5\x9e\xc9\x66\x76\xef\x5c\xf7\x14\xb8\x19\x4c\x49\x3d\x90\xdf\x64\x2a\x2c\xb5\x55\x63\x78\xe3\x24\x9a\xd6\x05\xae\x5f\x4f\x5f\x4f\xab\x60\x70\x6c\x4d\x19\x29\x8a\x0c\x63\x56\x8f\x91\x8f\xfb\xb7\xb3\x36\xdf\x3f\xda\xf6\x24\x99\x54\x4a\xa2\x31\x2e\xcf\xff\x4b\xe8\x9c\xd5\xec\x7c\xfa\xdd\x3b\x63\x28\xff\xcc\x02\x92\x1e\xe2\x54\x76\x8d\x08\x3b\x2b\x85\x75\xea\x10\xeb\x54\x07\xeb\xd8\xd2\x79\xfa\xd5\x45\xa4\xac\x24\x61\x30\x70\x1e\x17\xfb\x14\x8e\xe2\x2e\x51\xae\x1b\x1d\xa3\x65\x8e\xa1\x64\xbd\x89\x32\xe0\x89\xfd\x2e\x8a\x96\xee\x86\x4e\x20\x33\x75\x3d\x87\xcc\xaa\x03\xb3\x20\x5b\x52\x83\x21\xc1\xae\x5c\xdf\xa2\x1f\x35\x2c\xba\x13\xd3\xfc\xd9\x09\x69\x5c\xa0\xd1\x2e\x5f\xd7\x98\xca\x28\xaa\xf3\x45\x91\x34\xd9\x92\x5c\xe7\x0b\xb4\x97\xdb\xf2\x25\xea\xa9\xa7\x42\x3c\x52\x71\xaa\x64\x5d\x8e\x83\x2e\xcb\xe1\xd0\x09\xe9\xac\x1c\xbc\x8f\xd7\x8d\xb6\xec\x51\xb2\x8b\xb8\xcf\x67\xc9\x82\x31\xac\x85\xd1\x21\x69\x6e\x83\x83\xc9\xf3\x7a\xdf\x21\xa1\x48\xea\x38\x02\xc7\x64\xe7\xdd\xb1\x05\x6d\x49\x0e\x7c\x6c\xf2\xb2\x3d\xb6\xd1\x2a\x0e\x3e\xde\xd5\x5f\x5e\x5d\x8d\x6d\x8f\x18\x90\x95\x6d\x87\x91\x92\xcf\x0e\x82\x6c\xb5\x19\xa9\x79\x50\xde\x43\x07\x5f\x95\x83\xcf\xd7\xca\xb1\x7b\x71\x74\x78\x17\x82\x38\x99\xc2\x67\xfb\xb9\xf8\x8e\xa4\x96\x6b\xd7\x34\xa7\x6b\xe1\x31\xdb\x67\x0f\x91\x7d\xb6\x27\x7b\x8f\x1e\x8d\x21\xa3\x43\x57\xc3\xcb\x6f\x35\xbc\x94\x5e\x74\x56\x92\xe5\x28\xec\x79\x40\xfc\x08\x38\x4e\x00\x88\xcb\x75\x1e\x6c\x8f\x84\xe2\xa7\x1f\x09\xc5\xf4\x6b\x2c\x16\x0f\x40\x31\x5f\x3c\x15\x89\xef\xdf\xeb\x51\x32\xb2\x60\x9c\xb4\xb8\x25\xf4\xbc\x24\x3c\xe8\xd9\xec\xb4\x69\xff\x1e\x86\xf9\x23\x61\x78\x71\x16\x86\x87\xe9\xdf\x44\x11\x8b\xba\x37\x2e\x3d\x59\x00\xca\x1f\x8d\x98\x55\x54\xc5\xa8\x01\x72\x27\xe3\xf6\xb4\xf8\x1a\xad\x72\x07\x42\x5e\x6b\x85\xf4\x84\x7c\x1f\x2c\x7b\x03\xb2\x71\xbf\x51\x87\x31\x9f\x0d\xea\x2f\x1b\xc1\x7e\x1f\xf8\xcf\x27\xdb\x63\x71\x9c\x3f\xed\x36\x3d\x2c\xe3\xcf\xdb\xd0\x83\xbd\x6a\xbf\x0d\xa6\x7d\xeb\x9e\x84\xfe\x09\x00\x00\xff\xff\x2b\xa5\x23\xa9\x79\x10\x00\x00")

func configChainstorageBitcoinMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBitcoinMainnetBaseYml,
		"config/chainstorage/bitcoin/mainnet/base.yml",
	)
}

func configChainstorageBitcoinMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageBitcoinMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bitcoin/mainnet/base.yml", size: 4217, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBitcoinMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\xbd\x6e\xc3\x30\x0c\x06\x77\x3d\x05\x91\xce\x36\xdc\x66\x28\xa2\x39\x1d\xba\x34\x4b\x76\x83\x96\xbe\xc4\x84\xf5\x63\x48\x8c\xd3\xf4\xe9\x0b\x3b\x45\xc1\x91\x77\x87\xef\x85\xce\xa3\x54\xba\x48\x00\x49\xa5\x2b\x12\x0a\x2b\x3c\x0d\x0f\xda\x45\x9e\x40\x2e\xa7\x8b\x5c\x77\x2d\x1d\x4f\xf4\x75\x3a\xd3\xc7\xf1\xf3\xdc\x1a\xbe\x57\x6b\x88\xf8\x5e\x7b\x76\x2e\xdf\x92\x5a\xf2\x58\x10\xf2\x1c\x91\xd4\x10\x0d\x37\x37\x41\x2d\xe1\x9b\xe3\x1c\xd0\xb8\x91\x25\x55\xcd\x85\xaf\x68\x06\x51\x97\x25\x35\x91\x25\x25\x68\xe3\xb1\x18\xc7\x1e\xc9\x61\xcb\x7a\x5f\x50\xab\x25\x45\x9c\x73\xe1\xb0\x02\xed\x5f\xa9\x75\x39\xda\xf7\xb7\xfd\xde\x54\x94\x05\x65\x15\x06\x49\xbe\xff\xb7\xba\x76\x3b\x7b\xe8\x0e\x9d\xb9\xe7\x32\x5d\x42\x7e\xee\x9d\x73\x08\x4f\x83\x88\x9d\xca\x22\xfa\xe8\x47\x70\xd1\x01\xac\xbd\x4a\x44\xbe\xa9\xa5\xd7\x2e\x6e\x8c\x1b\xe1\xa6\x39\x4b\xd2\xbe\xca\x0f\xd6\x47\x67\x7e\x03\x00\x00\xff\xff\xdc\x01\x01\x89\x34\x01\x00\x00")

func configChainstorageBitcoinMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBitcoinMainnetDevelopmentYml,
		"config/chainstorage/bitcoin/mainnet/development.yml",
	)
}

func configChainstorageBitcoinMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageBitcoinMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bitcoin/mainnet/development.yml", size: 308, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBitcoinMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageBitcoinMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBitcoinMainnetLocalYml,
		"config/chainstorage/bitcoin/mainnet/local.yml",
	)
}

func configChainstorageBitcoinMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageBitcoinMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bitcoin/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBitcoinMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x4f\xc3\x30\x10\xc5\xf1\xdd\x9f\xe2\xa9\xcc\xb1\x22\x3a\xa0\x7a\x2e\x03\x0b\x5d\xb2\x57\xe7\xf3\x35\x3d\x35\x3e\x47\xb6\x43\xe1\xdb\xa3\x56\x08\xbd\xf5\xfd\x7f\x2f\x98\xae\xda\x70\xd1\x45\xa0\x0d\xb3\x98\x54\xea\x92\x10\x7f\xb0\xcb\x74\x13\x70\xb1\x8b\xce\x3b\x8f\xe3\x09\x9f\xa7\x09\xef\xc7\x8f\xc9\x3b\xba\xb7\xe0\x00\xba\xb7\x33\x31\x97\xcd\x7a\xc0\x5a\x4b\xda\xb8\x6b\x31\x07\xc4\x8d\x6f\xd2\x03\xe4\x9b\xf2\xba\xc8\xc0\x57\x52\x6b\xbd\x54\x9a\x65\x88\xda\xb9\xa8\x0d\x99\xd4\x4c\xfa\xf0\x28\x1d\x53\x12\x63\x79\xb2\x29\x55\x69\x2d\xa0\x4b\x5e\x4b\xa5\xc5\xff\x31\x9e\x4b\x0e\x6f\xaf\xfb\xbd\x6b\x52\xbf\xa4\x3e\xce\x51\x2d\x9d\xff\x8b\xd1\x3f\x17\x0e\xe3\x61\x74\xbf\x01\x00\x00\xff\xff\x62\xf1\xd6\xf7\xde\x00\x00\x00")

func configChainstorageBitcoinMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBitcoinMainnetProductionYml,
		"config/chainstorage/bitcoin/mainnet/production.yml",
	)
}

func configChainstorageBitcoinMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageBitcoinMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bitcoin/mainnet/production.yml", size: 222, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBscMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5b\x6f\xe3\xb6\x12\x7e\xd7\xaf\x20\x72\x9e\x13\x5f\xb2\xd9\x73\x56\xc0\x79\xd8\x1b\xce\x09\xb6\x4d\x8a\x36\x40\x81\xbe\x10\x23\x72\x64\x11\xa6\x48\x2d\x67\xe4\xb5\xfb\xeb\x0b\x92\x52\x64\xbb\x71\x92\x45\x77\x37\x6f\x32\x39\x9c\xdb\xf7\xf1\x1b\xfa\x5f\xe2\xae\x31\x24\x6a\x63\x51\x18\x12\x2b\x74\x18\x80\x51\x8b\x6a\x27\xce\x5a\x58\xa3\x50\xde\xd5\x66\x75\x76\x21\x3e\xdc\x8a\x9b\xdb\x3b\xf1\xf1\xc3\xf5\xdd\x45\x01\x9d\x29\x0b\x21\x5a\xd8\x4a\xd7\xb7\xb2\xb2\x5e\xad\x65\xf4\x42\xa5\x58\xcc\xe7\xf3\xe3\x3d\x2a\xc5\x55\x5c\x8c\x0b\x5f\x7c\x58\x63\x48\x86\x85\x10\xc4\x01\xa1\x35\x6e\x25\x2b\x60\xd5\x48\x32\x7f\xe2\x60\x3c\x6d\x19\xc7\x18\x36\x60\x4b\xb1\xa0\x83\x8d\x14\xc4\x4b\xdc\xa0\x63\xc9\xa6\xc5\xe8\xb5\x2d\xe0\x0b\xc5\xf4\xe0\x0b\x49\x50\xca\xf7\x8e\x4b\xa1\x71\x83\xd6\x77\x2d\x3a\x2e\x84\xa8\x7a\xb5\x46\x2e\xc5\xd9\x59\x21\x84\xb6\x9f\xa3\xb9\x10\x1a\x2d\xec\x24\xa1\xa2\x52\xbc\x49\x55\x08\xe1\x20\x7a\xc5\x2d\xb4\x9d\x45\xa9\x1a\x30\x8e\xd8\x07\x58\xe1\x50\x9a\xac\x48\xc9\x16\x8c\x73\xc8\x52\xdb\xcf\xe9\xd4\xc6\x90\xa9\x8c\x35\xbc\x4b\x69\xf9\x9e\x07\xb7\xaf\x93\x5b\xbd\x73\xd0\x7a\x5d\xe5\xb0\xb9\x7d\x0c\x95\x7d\x7e\xa4\x74\x70\xa8\xfb\xa9\x83\xb9\x3f\x8f\x1e\x97\x0d\x9a\x55\xc3\xd2\x38\x8d\xdb\x67\xf9\xda\x8d\x47\x8e\xbd\x6e\x30\x90\xf1\x0e\xb5\x7c\x3a\xbd\xc9\xf6\xd1\x44\x1f\x74\x39\x1c\x79\x2c\xe3\x53\xee\x77\xe3\x59\x7d\x14\xaa\x0b\x48\x66\x15\x0f\xf4\xc1\x4a\xdc\x76\x26\x00\x1b\xef\x4a\x71\x39\x6f\x0b\x21\x02\xae\xd2\xaf\x9e\xce\x11\x88\xcf\x17\x89\x8d\x29\xd8\xc0\x20\x60\x90\xca\xb7\xd1\x11\x25\xd3\xff\xfd\x71\xfd\x4b\xa1\x40\xa3\x53\xc9\x06\xb4\x8e\x7b\x23\xf5\x7c\x0c\x5e\x8a\xfd\xb4\xcf\x2b\x52\xe7\x53\x4e\x01\x19\x5d\x4c\x42\x76\x18\x8c\xd7\xa5\xf8\x77\x91\xcc\xa3\xb7\x5c\x07\x31\x04\x1e\xf0\x28\xc5\xbc\x98\x28\xb5\xca\x69\x59\x60\x24\x2e\xc5\x32\xfd\xa2\x01\x92\xe5\x64\x98\xae\xce\x25\x8d\x0b\xd9\xbf\x78\xf7\xd3\xed\xfb\x4f\xef\xff\xff\xf6\xfa\x46\xbe\xfb\xed\x7d\x21\x84\xb2\x06\x1d\x67\x9f\x2d\x10\x63\xc8\xdf\x42\xa0\xd3\x9d\x37\x8e\xe5\x2a\xf8\xbe\x1b\xaa\x13\x82\x2c\x6c\xf0\x09\x9b\x0d\x58\xa3\x81\xfd\xe3\xbe\x46\xe4\x8f\x2a\x5a\x1c\x54\x14\x7f\xd5\x08\xdc\x87\x21\x68\xf0\x84\xcc\x20\x3b\x08\x84\xa1\x14\x35\x58\xc2\x42\x08\x13\x02\x26\x76\x44\x22\x69\x43\x0c\x11\x9e\xa8\x5d\x51\xa5\x90\xa3\x48\x95\xe2\xe6\xe3\xdd\xef\xb7\xbf\x7e\x8a\xc5\xcb\x9f\xdf\x5e\xdf\xdc\x7c\xbc\x2b\xb2\x20\xca\x2c\x0b\xfb\xec\x51\xc1\xef\x41\x12\xc0\xad\x70\x50\xb3\x57\x11\x68\x43\x89\xb4\xce\x6b\x94\x0a\x1c\x84\xdd\x94\xcd\xb8\xd9\x79\x6b\xa3\xac\x9d\xda\x9f\x84\xef\xd0\xa2\xee\x9d\x8a\x0c\x01\x2b\x73\x57\xce\xce\x0a\xd2\xeb\x44\xb7\x9e\x1b\xd9\x20\xe8\x58\x7d\x6a\x64\x5a\x61\xbf\x46\x37\x2c\x1c\x5c\x99\x7b\x7a\x36\xcc\x1d\x95\xb3\x99\xab\xf9\x1c\x3a\x73\xa1\xbc\x71\x15\x10\x5e\x28\xdf\xce\xa0\x33\x33\xdc\x76\xb3\xfd\xa3\xb3\x8a\xd4\x6c\x68\xc6\x6c\xb3\x78\x50\xed\x03\x12\xd7\xbd\x2d\x05\x87\x1e\x0b\xc2\xb0\xc9\x0c\xaa\x8c\xd3\x53\x68\xeb\x15\xd8\xc6\x13\x97\x6f\xe6\x6f\xe6\x05\x59\x98\xfa\x3a\x88\x8e\x46\xcb\x30\xcc\x89\x89\xc2\xe3\xf2\x32\xde\x55\xdc\x76\xa8\x18\x75\x4a\xa1\xb6\x3e\xcf\x84\x73\xd1\x7a\x67\xd8\x87\xf4\x1d\x1b\x8e\xf9\x33\xf7\x16\xc3\xec\x9e\x68\xff\x8d\x35\x44\xe5\xf6\xb5\xa4\x9d\x53\x19\xbb\x89\x2c\x29\x38\x9b\xd8\xd8\x65\xfa\x6a\x23\xe0\x4e\xa1\xb4\x40\x9c\x25\xa6\x14\x97\x6d\x71\x90\x40\x05\x6a\x5d\x9b\x18\x36\x33\x14\x14\x9b\x4d\x9c\x13\x01\x39\xec\xe2\x44\x33\x6d\xdf\x4a\x60\xc6\xb6\x63\x2a\xc5\xe5\xa1\x19\xa9\x06\x75\x6f\x51\xb2\x1f\xee\xfd\x30\x60\x4a\x71\xd5\x1e\x99\xe6\x6d\x2f\x95\xf5\x84\x93\xdd\x62\x9e\x0d\xf7\x27\xee\xf2\x6a\x98\x77\xaa\x41\xb5\xce\xd7\x6f\x9c\xc5\xc3\x4e\x1c\xb6\x01\xbb\xe0\x15\x12\xa1\x8e\x72\x94\x87\x76\x54\xc7\x3c\x2b\xfb\x56\x2a\xef\x54\x1f\x42\xec\x21\x6e\x39\x80\x62\x9f\xe0\x7f\x9d\x2c\x18\x68\x2d\xad\xa1\x34\x90\x6b\xe8\x6d\x16\xf8\xb1\x43\x52\xa3\x32\x51\x37\xa7\x64\x97\xed\xa1\x05\x6e\x51\xf5\x7c\x68\xf2\xaa\x39\xb4\x31\x3a\x2a\x26\xef\xca\xfb\xa5\x8b\xa9\xed\x11\x03\x74\xaa\x69\x21\x32\xf3\xc5\x41\x50\x8d\xb1\x13\x47\xf7\xca\x3b\x75\xf0\xf5\x70\xf0\xe5\x5a\x39\x75\x2f\xaa\x47\xf0\x44\xf2\x48\xc3\x9f\xec\xe7\xd5\x77\x24\xb5\x5a\xfb\xba\x3e\x7e\x33\x1e\xb2\x7d\x71\x8a\xec\x8b\x91\xec\x1d\x04\xb0\x16\xad\xa1\x36\x0b\xf8\xc9\x86\x0f\xa5\x0f\x03\x5a\xa1\xe3\xf8\x1a\xc8\x7a\xf7\x23\xe0\x38\x02\x20\x3e\xbd\xb3\xc2\x3d\x13\x8a\xff\xfc\x40\x28\x2e\xff\x0e\xc5\xd5\x69\xd9\xf9\x4a\x20\xbe\x7f\xab\xa7\xd1\x91\x07\xc7\x51\x87\x1b\x84\xc0\x15\xc2\x23\x2d\xfb\xe7\x20\x2c\xbf\x15\x08\xa7\xb9\x5f\xc7\xf1\x15\x27\xde\xf4\x02\xc9\xea\x3f\xfc\x0d\x89\x49\xc5\x79\x18\x07\x80\xda\x29\xbb\x77\xa1\x1e\x40\x8b\xf2\x4b\x58\xaa\x80\xc0\x0f\xa1\x32\x1a\xa0\x8b\x8f\x1c\xbd\x1f\xf4\xc5\x90\xbe\x7f\x18\x8c\xcf\x82\x6f\xae\x6b\xcf\xc5\x71\xf9\x55\x77\xe9\x89\xcb\xf4\x62\xfd\x1c\xdb\x58\x64\xb3\xf8\x22\x4c\xaf\xae\x07\x12\xfa\x2b\x00\x00\xff\xff\x0a\x7c\x00\x9e\x94\x10\x00\x00")

func configChainstorageBscMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBscMainnetBaseYml,
		"config/chainstorage/bsc/mainnet/base.yml",
	)
}

func configChainstorageBscMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageBscMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bsc/mainnet/base.yml", size: 4244, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBscMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x6f\xc2\x30\x10\xc5\xf1\xdd\x9f\xe2\x44\xe7\x58\x51\x19\x2a\x3c\xd3\xa1\x4b\x59\xb2\xa3\xcb\xf9\x11\x2c\xe2\x73\xe4\x33\xa1\xfd\xf6\x15\x51\x85\xde\xfa\xfe\xbf\x37\x1a\xae\xc9\xe8\x92\x66\x50\x32\x9a\xa0\xa8\xdc\x10\x69\xfc\xa5\x5d\xe6\x1b\x48\x8a\x5e\xd2\xb4\xf3\x74\x3c\xd1\xf7\x69\xa0\xcf\xe3\xd7\xe0\x1d\x3f\x2c\x38\x22\x7e\xd8\x99\x45\xca\x5d\x5b\xa0\x88\x15\x73\x59\x32\xb4\x39\xa2\xf1\x2e\x37\xb4\x40\xf8\xe1\xbc\xcc\xe8\xe4\xca\x49\xad\x95\xca\x13\xba\xd1\xa4\xcb\x9c\x54\xd1\xba\x88\xd5\x09\x47\xa8\x60\x23\x63\xac\x30\x0b\xd4\x90\x97\x52\x79\x7e\x1e\xfc\xbf\xe2\xa5\xe4\xf0\xf1\xbe\xdf\x3b\x43\x5d\x51\x9f\xc1\x98\x34\x9e\x5f\x55\xef\xb7\x85\x43\x7f\xe8\xdd\x5f\x00\x00\x00\xff\xff\x5d\x3b\x11\x73\xde\x00\x00\x00")

func configChainstorageBscMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBscMainnetDevelopmentYml,
		"config/chainstorage/bsc/mainnet/development.yml",
	)
}

func configChainstorageBscMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageBscMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bsc/mainnet/development.yml", size: 222, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBscMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageBscMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBscMainnetLocalYml,
		"config/chainstorage/bsc/mainnet/local.yml",
	)
}

func configChainstorageBscMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageBscMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bsc/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageBscMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x4f\xc3\x30\x10\xc5\xf1\xdd\x9f\xe2\xa9\xcc\xb1\x22\x3a\xa0\x7a\x2e\x03\x0b\x5d\xb2\x57\xe7\xf3\x35\xb5\x1a\x9f\x23\x9f\x43\xe1\xdb\xa3\x56\x08\xbd\xf5\xfd\x7f\x2f\x98\xae\xd9\x70\xc9\x8b\x20\x1b\x66\x51\x69\xd4\x25\x21\xfe\x60\x57\xe8\x26\xe0\xaa\x97\x3c\xef\x3c\x8e\x27\x7c\x9e\x26\xbc\x1f\x3f\x26\xef\xe8\x6e\xc1\x01\x74\xb7\x33\x31\xd7\x4d\x7b\xc0\xda\x6a\xda\xb8\xe7\xaa\x0e\x88\x1b\xdf\xa4\x07\xc8\x37\x95\x75\x91\x81\xaf\x94\xd5\x7a\x6d\x34\xcb\x10\x8d\x87\x42\x59\x55\xfa\xf0\xa8\x1c\x53\x12\x65\x79\x92\x29\x35\x31\x0b\xe8\x52\xd6\xda\x68\xf1\x7f\x84\xe7\x5a\xc2\xdb\xeb\x7e\xef\x4c\xda\x97\xb4\xc7\x39\x66\x4d\xe7\xff\x62\xf4\xcf\x85\xc3\x78\x18\xdd\x6f\x00\x00\x00\xff\xff\x23\xe5\xbe\x3c\xda\x00\x00\x00")

func configChainstorageBscMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageBscMainnetProductionYml,
		"config/chainstorage/bsc/mainnet/production.yml",
	)
}

func configChainstorageBscMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageBscMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/bsc/mainnet/production.yml", size: 218, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageDogecoinMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\xdf\x6f\xdb\xb6\x13\x7f\xd7\x5f\x71\xc8\xf7\x39\xb1\x9d\x36\xfd\xae\x02\xf6\xd0\xb5\x41\x17\x74\x4b\x86\x21\xc0\x80\xbd\x10\x27\xf2\x64\x11\xa6\x48\x95\x3c\xb9\xf6\xfe\xfa\x81\x22\x65\xd9\x6e\x52\x37\x58\xdb\xbc\x59\xe4\xf1\x7e\x7e\xee\x73\xe7\xff\xc1\x7d\xa3\x03\xd4\xda\x10\xe8\x00\x4b\xb2\xe4\x91\x49\x41\xb5\x85\xb3\x16\x57\x04\xd2\xd9\x5a\x2f\xcf\x2e\xe0\xdd\x1d\xdc\xde\xdd\xc3\xf5\xbb\x9b\xfb\x8b\x02\x3b\x5d\x16\x00\x2d\x6e\x84\xed\x5b\x51\x19\x27\x57\x22\x6a\x09\x25\x2c\xe6\xf3\xf9\xf1\x5d\x28\xe1\x2a\x1e\xc6\x83\x4f\xce\xaf\xc8\x0f\x82\x05\x40\x60\x4f\xd8\x6a\xbb\x14\x15\xb2\x6c\x44\xd0\xff\x50\x16\x9e\xae\xb4\x65\xf2\x6b\x34\x25\x2c\xc2\xc1\xc5\x60\xc4\x09\x5a\x93\x65\xc1\xba\xa5\xa8\xb5\x2d\xf0\x53\x88\xee\xe1\xa7\x20\x50\x4a\xd7\x5b\x2e\x41\xd1\x9a\x8c\xeb\x5a\xb2\x5c\x00\x54\xbd\x5c\x11\x97\x70\x76\x56\x00\x28\xf3\x31\x8a\x03\x28\x32\xb8\x15\x81\x64\x28\xe1\xf5\x10\x05\x80\xc5\xa8\x95\x36\xd8\x76\x86\x84\x6c\x50\xdb\xc0\xce\xe3\x92\x72\x68\x42\xb9\x25\x49\xa7\xad\x68\x51\x5b\x4b\x2c\x94\xf9\x38\x3c\x5d\xeb\xa0\x2b\x6d\x34\x6f\x07\xdf\x5c\xcf\x59\xf7\xab\x41\xb7\xda\x5a\x6c\x9d\xaa\x92\xed\x94\x43\xc6\xca\x3c\xd1\xdc\xf0\x3a\x67\xe0\xd4\xeb\x94\xa9\xd3\x3a\x44\x43\x7a\xd9\xb0\xd0\x56\xd1\xe6\x6b\x14\x56\xdb\xf1\xc9\x83\xaa\xd7\xe4\x83\x76\x96\x94\x38\xed\xe8\x24\x7b\xda\xe5\x07\xf5\xe6\x77\x5f\xf2\xfd\x11\x1b\xd5\x76\x7c\xab\x1e\xb2\xd7\x79\x0a\x7a\x19\x5f\xf5\xde\x08\xda\x74\xda\x23\x6b\x67\x4b\x78\x31\x6f\x0b\x00\x4f\xcb\xe1\xab\x0f\xe7\x84\x81\xcf\x17\x03\x56\x07\x8b\x19\x5f\xc8\x28\xa4\x6b\xa3\xa2\x30\x88\xbe\xff\xfb\xe6\x8f\x42\xa2\x22\x2b\x07\x19\x54\x2a\xde\x8d\xc0\x74\xd1\x78\x09\xfb\xbe\x9f\x8f\x8e\x9d\x4f\x8e\x79\x62\xb2\xd1\x13\xd1\x91\xd7\x4e\x95\xf0\xff\x62\x78\x13\x55\xa6\x88\x02\xa3\xe7\x5c\xa3\x12\xe6\xc5\x04\xb8\x65\xf2\xcd\x20\x53\xe0\x12\x16\xc3\x57\xc8\x15\x5a\x4c\x82\xa9\xbb\xda\xf1\x20\xe9\x87\x5f\x7e\xbb\x7b\xfb\xe1\xed\xaf\x6f\x6e\x6e\xc5\xbb\xbb\xf7\xd7\x6f\xef\x6e\x6e\x0b\x00\x69\x34\x59\x4e\x8a\x5b\x0c\x4c\x3e\xfd\x06\x20\xab\x3a\xa7\x2d\x8b\xa5\x77\x7d\x97\xe3\x04\x08\x06\xd7\x74\x42\x66\x8d\x46\x2b\x64\xf7\x65\x5d\x23\x10\x8e\xc2\x9a\x1f\x84\x15\xbf\x6a\x42\xee\x7d\x36\xea\x5d\x20\x66\x14\x1d\xfa\x40\xbe\x04\xf6\x3d\x15\x00\xda\x7b\x1a\xb0\x12\x61\xa5\x74\x60\x8c\x75\x8a\x14\x17\xc9\x8c\x38\x72\x59\x09\xb7\xd7\xf7\x7f\xdd\xfd\xf9\x61\x97\x00\xf1\xfb\x9b\x9b\xdb\xdb\xeb\xfb\x62\xa7\x77\xbf\xc5\xad\x63\x51\xbb\xde\x2a\x41\xde\x3b\x2f\xa4\x53\x91\x36\x5f\x4e\x22\x39\xb5\x63\xa1\x13\x0d\x8d\xc6\xc6\xaa\x27\x62\x16\x89\x9e\x3e\x03\xab\xf4\x6e\xaf\xf8\x1e\xed\x92\x32\xb5\x46\x3b\x4a\x87\xa1\x51\x94\xf9\x28\x3a\xef\x24\x85\xe0\xc6\xa0\xeb\xde\xca\x08\x25\x34\x22\x65\xee\xec\xac\x08\x6a\x35\x80\xb3\xe7\x46\x34\x84\x2a\x66\x68\x48\xf6\x70\xc2\x6e\x45\x36\x1f\x1c\x74\xd9\x0e\xcc\x0d\x73\x17\xca\xd9\xcc\xd6\x7c\x8e\x9d\xbe\x88\xae\x56\x18\xe8\x42\xba\x76\x86\x9d\x9e\xd1\xa6\x9b\xed\x3f\x9d\x8d\x01\xcd\x72\x40\xb3\xf5\xe2\xc1\xf1\xe1\x29\x70\xdd\x9b\xec\x7b\x20\xbf\x4e\x50\xab\xb4\x55\x93\x7d\xe3\x24\x9a\xc6\x05\x2e\x5f\xcf\x5f\xcf\x8b\x60\x70\xca\xcd\x48\x5b\x64\x18\x4b\xb8\x3a\xc0\xfb\x78\x9a\xda\x9b\x36\x1d\x49\x26\x35\xb8\x50\x1b\x97\x86\xcc\x39\xb4\xce\x6a\x76\x7e\xf8\xdd\x39\x63\x28\xfd\x4c\x53\x2a\x7f\xc4\xce\x37\xb8\xa2\xd9\xae\xeb\x7e\x8e\x01\xc5\x91\xe0\x6a\x11\xb6\x56\x0a\xeb\xd4\x21\xc6\x0a\x00\xd6\x31\xd5\x97\xc3\xaf\x36\x56\xd0\x4a\x12\x06\x03\x27\x9e\x2a\x61\xd1\x14\x07\xde\x54\x28\x57\xb5\x8e\x3e\x24\xc8\xa1\x64\xbd\x8e\x03\xc8\x13\xfb\x6d\x9c\x97\xba\xed\x5b\x81\xcc\xd4\x76\x1c\x4a\x78\x71\x28\x16\x64\x43\xaa\x37\x24\xd8\x65\xca\xc8\x93\xab\x84\xab\xf6\x48\x34\x5d\x3b\x21\x8d\x0b\x34\xc9\x2d\xe6\x49\x70\x7f\x9e\x5f\x5e\xe5\x69\x2a\x1b\x92\xab\xd4\xb4\xe3\xa4\xcf\x37\x71\x94\x7b\xca\x68\x24\x15\x99\x2c\xad\x04\x31\xfd\xa9\x05\xfa\x56\x48\x67\x65\xef\x7d\x6c\x71\xda\xb0\x47\xc9\x2e\x62\xe1\x32\x75\x0f\x63\x58\x09\xa3\xc3\x30\xee\x6b\xec\x4d\x9a\x12\x63\x86\x84\x22\xa9\x23\xef\x4e\xce\x5e\xb6\x87\x12\xb4\x21\xd9\xf3\xa1\xc8\xcb\xe6\x50\x46\xab\x48\xb6\xbc\x2d\x77\x47\x17\x53\xda\x63\x0d\xc8\xca\xa6\xc5\x08\xd3\x67\x2f\x82\x6c\xb4\x99\x00\xbb\x17\xde\x63\x0f\x5f\xe5\x87\xcf\x97\xca\x29\x7b\x91\x4f\xbc\x0b\x41\x1c\x31\xff\xc9\x7c\x5e\x7d\x47\x50\xcb\x95\xab\xeb\xe3\x8d\xf4\x10\xed\x8b\xc7\xc0\xbe\x18\xc1\xde\xa1\x47\x63\xc8\xe8\xd0\x8e\xcc\xff\x48\xc2\x73\xe8\x79\xb6\x4b\xb2\x1c\xb7\x89\xc4\x0e\x3f\xa2\x1c\x47\x05\x88\x8b\x7d\xa2\xbb\xaf\x2c\xc5\x4f\x3f\xb2\x14\xf3\xcf\x6b\x71\xf5\x38\xef\x3c\xb1\x12\xdf\x3f\xd7\xd3\x20\x49\x63\xe4\x28\xc5\x0d\xa1\xe7\x8a\xf0\x0b\x39\xfb\xef\x55\xb8\xfc\x66\x55\x78\x1c\xfd\x75\x1c\x60\x71\xe6\x95\x50\xa3\x09\xb4\xe3\xff\xfc\x0f\x27\x7a\x15\x27\x62\x1c\x01\x72\x2b\xcd\x5e\x4b\x1d\x94\x2b\x37\x41\x48\xcb\xb4\x90\x9e\x90\x1f\xaa\xcb\x28\x40\x36\x6e\x3d\x6a\xdf\xea\xb3\xd5\x7a\xb7\x28\x8c\x6b\xc2\x37\xa7\xb6\xaf\xad\xe4\xe5\xd3\xda\xe9\x44\x3f\x3d\x5b\x42\xf7\xd6\xad\x71\x45\x1c\x36\xaf\x07\x1c\xfa\x37\x00\x00\xff\xff\xb4\xb8\xa2\xd8\xf6\x10\x00\x00")

func configChainstorageDogecoinMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageDogecoinMainnetBaseYml,
		"config/chainstorage/dogecoin/mainnet/base.yml",
	)
}

func configChainstorageDogecoinMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageDogecoinMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/dogecoin/mainnet/base.yml", size: 4342, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageDogecoinMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x6e\xc2\x30\x18\xc4\xf1\xdd\x4f\x71\xa2\x73\xac\xa8\x0c\x15\x9e\xe9\xd0\xa5\x2c\xd9\xd1\x17\xfb\x08\x16\xf1\xe7\xc8\x36\xa1\x7d\xfb\x8a\xa8\x42\xb7\xde\xff\xf7\x86\xe1\x1a\x2b\x2e\x71\x26\x62\xc5\x44\x65\x91\xc6\x80\xf1\x17\xbb\x24\x37\xc2\x67\xbd\xc4\x69\x67\x71\x3c\xe1\xfb\x34\xe0\xf3\xf8\x35\x58\x23\x8f\xea\x0c\x20\x8f\x7a\x16\xef\xf3\x5d\x9b\x43\xe0\xca\x39\x2f\x89\xda\x0c\x30\xde\xfd\x8d\xcd\x81\x3f\x92\x96\x99\x9d\xbf\x4a\xd4\xda\x72\x91\x89\x5d\xc8\x13\x7d\x8e\xda\x25\x89\xaa\x6c\x5d\xe0\x6a\xbc\x04\xaa\xe7\xe6\x86\x50\x58\xab\x43\x63\x5a\x72\x91\xf9\x79\xb0\xff\x94\xf5\x39\xb9\x8f\xf7\xfd\xde\x54\x96\x95\xe5\x19\x8c\x51\xc3\xf9\x55\xf5\x76\x9b\x3b\xf4\x87\xde\xfc\x05\x00\x00\xff\xff\x02\x04\x92\x7d\xe3\x00\x00\x00")

func configChainstorageDogecoinMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageDogecoinMainnetDevelopmentYml,
		"config/chainstorage/dogecoin/mainnet/development.yml",
	)
}

func configChainstorageDogecoinMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageDogecoinMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/dogecoin/mainnet/development.yml", size: 227, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageDogecoinMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageDogecoinMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageDogecoinMainnetLocalYml,
		"config/chainstorage/dogecoin/mainnet/local.yml",
	)
}

func configChainstorageDogecoinMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageDogecoinMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/dogecoin/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageDogecoinMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\xb1\x6e\xeb\x30\x0c\x45\x77\x7d\x05\x91\x37\xdb\x08\x5e\x86\x22\x9a\xd3\xa1\x4b\xb3\x78\x37\x68\xe9\xda\x11\x2c\x89\x06\x25\xd7\xe9\xdf\x17\x76\x8a\x82\xcb\x1d\xce\x39\xe0\x3f\xea\x1e\xa1\xd0\x18\x22\x28\x14\x9a\x90\xa1\x5c\xe1\x69\xf8\xa6\x53\xe2\x19\xe4\x24\x8f\x61\x3a\xb5\x74\xbb\xd3\xe7\xbd\xa3\xf7\xdb\x47\xd7\x1a\xde\x8a\x35\x44\xbc\x95\x9e\x9d\x93\x35\x57\x4b\x8b\x8a\x5f\x5d\x0d\x92\x0d\xd1\xb0\xba\x19\xd5\x12\x9e\x9c\x96\x88\xc6\x3d\x38\xe4\x52\x45\x79\x42\xe3\x65\x82\x93\x90\x9b\xc4\x21\x67\xd4\x66\x57\x8d\x63\x8f\xec\x70\x74\xbd\x57\x94\x62\xa9\x22\x2d\xa2\x1c\xdb\xdf\x4e\xeb\x24\xd9\xb7\xff\x97\x8b\x29\xd0\x2f\xe8\x0e\x0f\x21\xfb\xfe\xcf\x38\xb7\xc7\xd9\xeb\xf9\x7a\x36\x25\xf2\x4e\xe0\xb9\xc0\x55\xf8\x7e\x13\x9d\xc7\x28\xaf\xe7\x1b\x4a\x92\x43\x15\x3d\xf6\x22\x31\xe2\x35\x4b\x55\x70\x82\x9a\x9f\x00\x00\x00\xff\xff\x24\x99\x42\xc7\x1e\x01\x00\x00")

func configChainstorageDogecoinMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageDogecoinMainnetProductionYml,
		"config/chainstorage/dogecoin/mainnet/production.yml",
	)
}

func configChainstorageDogecoinMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageDogecoinMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/dogecoin/mainnet/production.yml", size: 286, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumGoerliBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x41\x6f\x1b\x37\x13\xbd\xef\xaf\x18\xf8\x3b\xdb\x92\x1c\x3b\x5f\xb3\x40\x0f\x6d\x62\x24\x46\xd2\xb8\x08\x5c\x14\xe8\x85\x18\x91\xb3\x5a\x42\x5c\x72\x43\xce\x2a\x52\x7f\x7d\x41\x72\x57\x2b\xa9\xb2\x15\xa3\x49\x7c\xd3\x92\x33\xc3\x37\xf3\x86\x6f\xa8\xff\xc1\x7d\xad\x03\x54\xda\x10\xe8\x00\x0b\xb2\xe4\x91\x49\xc1\x7c\x03\x67\x0d\x2e\x09\xa4\xb3\x95\x5e\x9c\x5d\xc0\x9b\x3b\xf8\x78\x77\x0f\x37\x6f\x6e\xef\x2f\x0a\x6c\x75\x59\x00\x34\xb8\x16\xb6\x6b\xc4\xdc\x38\xb9\x14\x31\x4a\x28\x61\x36\x9d\x4e\x0f\xf7\x42\x09\xd7\x71\x31\x2e\x7c\x71\x7e\x49\x3e\x19\x16\x00\x81\x3d\x61\xa3\xed\x42\xcc\x91\x65\x2d\x82\xfe\x9b\x7a\xe3\x71\x4b\x5b\x26\xbf\x42\x53\xc2\x2c\xec\x6d\xa4\x43\x9c\xa0\x15\x59\x16\xac\x1b\x8a\x51\x9b\x02\xbf\x84\x08\x0f\xbf\x04\x81\x52\xba\xce\x72\x09\x8a\x56\x64\x5c\xdb\x90\xe5\x02\x60\xde\xc9\x25\x71\x09\x67\x67\x05\x80\x32\x9f\xa3\x39\x80\x22\x83\x1b\x11\x48\x86\x12\x5e\xa5\x2c\x00\x2c\xc6\xa8\xb4\xc6\xa6\x35\x24\x64\x8d\xda\x06\x76\x1e\x17\xd4\xa7\x26\x88\x6b\xf2\xd4\x35\x62\xe1\xc8\x1b\x2d\x94\xf9\x9c\x3c\x57\x3a\xe8\xb9\x36\x9a\x37\x09\x9a\xeb\xb8\x0f\xfd\x32\x85\x56\x1b\x8b\x8d\x53\xf3\x7c\x74\x2e\x21\xe3\xdc\x3c\xed\xb4\xe4\xdc\xe7\x7f\xca\x39\xd7\xe9\x64\x08\x51\x93\x5e\xd4\x2c\xb4\x55\xb4\xfe\x9a\x78\xf3\xcd\xe0\x72\x2c\xf2\x8a\x7c\xd0\xce\x92\x12\xa7\x61\x8e\xb6\x27\x01\x1f\x0d\xdb\xbb\x3d\x86\xfc\x81\x23\xe6\x9b\xc1\x57\x1d\x39\xae\xf5\x14\xf4\x22\x3a\x75\xde\x08\x5a\xb7\xda\x23\x6b\x67\x4b\x78\x31\x6d\x0a\x00\x4f\x8b\xf4\xd5\x85\x73\xc2\xc0\xe7\xb3\xd4\xa5\xe9\xc0\xbe\xb3\x90\x51\x48\xd7\xc4\x40\x21\x99\xbe\xfd\xeb\xf6\xf7\x42\xa2\x22\x2b\x93\x0d\x2a\x15\xf7\x86\x96\x74\x0d\x6a\x5b\xc2\x2e\xf4\xf3\x01\xd7\xf9\x16\x97\x27\x26\x1b\x81\x88\x96\xbc\x76\xaa\x84\xff\x17\xc9\x25\x46\xcc\xf9\x04\x46\xcf\x3d\x3f\x25\x4c\x8b\xb1\xd5\x16\x19\x9a\x41\xa6\xc0\x25\xcc\xd2\x57\xe8\xe9\x99\x8d\x86\xf9\x5a\xbd\x08\xc3\x4a\x3e\x00\x7e\xfd\x70\xf7\xfa\xfd\xeb\x77\xbf\xdc\x7e\x14\x37\xf7\xef\x6e\x3e\xdd\xfc\xf1\x5b\x01\x20\x8d\x26\xcb\x39\x72\x83\x81\xc9\xe7\xdf\x00\x64\x55\xeb\xb4\x65\xb1\xf0\xae\x6b\xfb\x3c\x01\x82\xc1\x15\x9d\xb0\x59\xa1\xd1\x0a\xd9\x3d\x1e\x6b\xe8\x83\x83\xbc\xa6\x7b\x79\xc5\xaf\x8a\x90\x3b\xdf\x1f\xea\x5d\x20\x66\x14\x2d\xfa\x40\xbe\x04\xf6\x1d\x15\x00\xda\x7b\x4a\xad\x12\xbb\x4a\xe9\xc0\x18\x79\x82\xd9\x55\x54\x31\xe2\x28\x62\x25\x7c\xbc\xb9\xff\xf3\xee\xd3\xfb\x6d\xfe\xe2\xed\xdd\xcd\xa7\x0f\xb7\x45\x16\x4d\xd1\x4b\xc7\x41\x37\x49\xef\x76\xe8\xf1\x68\x17\xd4\xab\xde\x55\x51\x75\x56\x46\x3a\xd1\x88\x0c\xfe\xec\xac\x08\x6a\x99\xfa\xa3\xe3\x5a\xd4\x84\x2a\x82\x4c\xf9\xa6\x15\x76\x4b\xb2\xfd\xc2\x5e\x9f\x6f\xfb\xa9\x66\x6e\x43\x39\x99\xd8\x8a\xcf\xb1\xd5\x17\xd2\x69\x3b\xc7\x40\x17\xd2\x35\x13\x6c\xf5\x84\xd6\xed\x64\xd7\x75\x32\x20\x9e\x64\xc4\x93\xd5\xec\xa8\x74\x7b\x0a\x5c\x75\xa6\x2f\x59\x20\xbf\xca\x64\xcf\xb5\x55\xe3\xf1\xc6\x49\x34\xb5\x0b\x5c\xbe\x9a\xbe\x9a\x16\xc1\xe0\x98\x7c\xaf\x1a\x8a\x0c\x63\x09\x57\xd3\xbd\x9e\x1b\x96\x67\xe9\x86\xd1\xba\x25\xc9\xa4\x12\x86\xca\xb8\xac\xf0\xe7\xd0\x38\xab\xd9\xf9\xf4\xbb\x75\xc6\x50\xfe\x99\x47\x44\xff\x11\x2f\x9f\xc1\x25\x4d\xb6\x9d\xff\x73\xcc\x28\x0a\xb2\xab\x44\xd8\x58\x29\xac\x53\xbb\x34\x27\x28\xac\x63\xa9\x67\xe9\x57\x13\x39\xb2\x92\x84\xc1\xc0\x59\x29\x4a\x98\x5d\x37\xc5\x1e\x9c\x39\xca\x65\xa5\x23\x88\xdc\x5b\x28\x59\xaf\xa2\xfe\x7b\x62\xbf\x89\xd3\x4a\x37\x5d\x23\x90\x99\x9a\x96\x43\x09\x2f\xf6\xcd\x82\xac\x49\x75\x86\x04\xbb\xfe\xde\xf6\x83\xa3\x84\xeb\xe6\xc0\x34\x6f\x3b\x21\x8d\x0b\x34\xda\xe5\x6a\x45\x28\xe3\x34\xbd\xbc\xee\x67\x99\xac\x49\x2e\xf3\xc5\x19\xe6\x6c\xbf\x13\x07\xa9\xa7\xd6\x3b\x49\x21\x90\x8a\x72\x92\x07\x72\x54\xb8\x3c\x07\xbb\x46\x48\x67\x65\xe7\x7d\xbc\x66\xb4\x66\x8f\x92\x5d\xec\x86\xcb\xab\x64\xc1\x18\x96\xc2\xe8\x90\x86\x6d\x85\x9d\xe1\xb4\x3c\x54\x48\x28\x92\x3a\x6a\xdf\x08\xf6\xb2\xd9\xb7\xa0\x35\xc9\x8e\xf7\x4d\xae\xea\x7d\x1b\xad\xa2\xe2\xf1\xa6\xdc\x2e\x5d\x8c\x65\x8f\x1c\x90\x95\x75\x83\xb1\x51\x9f\x9d\x04\x59\x6b\x33\x76\xec\x4e\x7a\x0f\x39\xbe\xec\x1d\x9f\xaf\x94\x63\xf5\xa2\xa0\x78\x17\x82\x38\x50\xdf\x93\xf5\xbc\xfe\x8e\x4d\x2d\x97\xae\xaa\x0e\xdf\x83\xfb\xdd\x3e\x7b\xa8\xd9\x67\x43\xb3\xb7\xe8\xd1\x18\x32\x3a\x34\x51\x74\x1f\x29\x78\x9f\x7a\x3f\x60\x25\x59\x8e\x13\x3d\xcb\xdf\x8f\xa0\xe3\x80\x80\xf8\xac\xce\x7a\xf7\x95\x54\xfc\xf4\x23\xa9\x98\xfe\x9b\x8b\xeb\x87\x75\x27\x6d\x54\xa8\x8d\x5b\x91\x17\x64\xe3\x78\x56\xdb\xf1\xfb\x14\x92\xbe\x3f\x0d\xe3\x90\xc9\x23\xe6\xa0\xfa\x35\xa1\xe7\x39\xe1\x23\xe5\xfc\xef\x04\x5d\x7e\x33\x82\x1e\xbe\x18\x8f\xd0\x51\xc5\xb9\x17\x47\x65\x09\x15\x9a\x40\xdb\xa9\xd1\xff\x2d\x89\x80\xe3\x20\x8d\x83\x43\x6e\xa4\xd9\xb9\x88\x47\x98\x0c\xf9\x15\x2c\xa4\x27\xe4\x63\x8c\x0d\x06\x5b\x20\xe3\xa1\xcf\xd6\x05\xdb\xe7\xc5\xf0\xb8\xf8\xe6\x7a\xf8\xb5\x1c\x5f\x3e\xed\x0e\x9e\xb8\x84\xcf\x56\xd0\x9d\x47\xda\xf0\xb2\x4c\xef\xb5\x23\x80\xfe\x09\x00\x00\xff\xff\x64\x32\x13\xd3\xa9\x10\x00\x00")

func configChainstorageEthereumGoerliBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumGoerliBaseYml,
		"config/chainstorage/ethereum/goerli/base.yml",
	)
}

func configChainstorageEthereumGoerliBaseYml() (*asset, error) {
	bytes, err := configChainstorageEthereumGoerliBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/goerli/base.yml", size: 4265, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumGoerliDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xbd\x6e\x83\x30\x14\xc5\xf1\xdd\x4f\x71\x95\xce\x20\x94\x54\xaa\xe2\x39\x1d\xba\x34\x0b\x3b\xba\xd8\x27\xd8\xc2\x1f\xc8\xbe\x90\xf6\xed\x2b\x50\x95\x73\xd6\xbf\x7e\x6f\xd4\x3b\x5f\xe9\xe1\x03\xc8\x57\x9a\x90\x50\x58\x60\x69\xfc\xa5\x53\xe4\x19\x64\x72\x7a\xf8\xe9\xd4\xd2\xed\x4e\xdf\xf7\x9e\x3e\x6f\x5f\x7d\xab\xf8\x59\xb5\x22\xe2\x67\x1d\xd8\x98\xbc\x26\xd1\x64\xb1\x21\xe4\x25\x22\x89\x22\x1a\x57\x33\x43\x34\xe1\x87\xe3\x12\xd0\x18\xc7\x3e\x55\xc9\x85\x27\x34\x10\x87\x82\x35\x36\x53\x46\x09\xbe\xb1\xd8\x94\x61\x8b\x64\x70\xb0\xd6\x16\xd4\xaa\x49\x10\x97\x5c\x38\xec\x41\xfb\x2f\xb5\x26\x47\xfd\x71\xbe\x5c\xd4\x41\xee\xfd\x18\xb2\x99\x87\x2a\x5c\x64\x70\xf0\x93\x13\x4d\xef\xe7\x6e\x9f\xaa\x28\x1b\xca\x51\xf9\x64\x87\x17\xdd\xb5\xc7\xf5\xb5\xbb\x76\xea\x2f\x00\x00\xff\xff\x30\xbe\x0b\x83\x07\x01\x00\x00")

func configChainstorageEthereumGoerliDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumGoerliDevelopmentYml,
		"config/chainstorage/ethereum/goerli/development.yml",
	)
}

func configChainstorageEthereumGoerliDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageEthereumGoerliDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/goerli/development.yml", size: 263, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumGoerliLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageEthereumGoerliLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumGoerliLocalYml,
		"config/chainstorage/ethereum/goerli/local.yml",
	)
}

func configChainstorageEthereumGoerliLocalYml() (*asset, error) {
	bytes, err := configChainstorageEthereumGoerliLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/goerli/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumGoerliProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x4e\xc3\x30\x18\xc4\xf1\xdd\x4f\x71\x2a\x73\xac\x88\x0e\xa8\x9e\xcb\xc0\x42\x97\xec\xd5\x17\xfb\x9a\x58\x8d\xed\xe8\xb3\x43\xe1\xed\x51\x23\x84\x6e\xbd\xff\xef\x05\xc3\x1c\x2b\x6e\x71\x21\x62\xc5\xc4\x4c\x95\xc6\x80\xf1\x07\x87\x24\x77\xc2\x97\x7c\x8b\xd3\xc1\xe2\x7c\xc1\xe7\x65\xc0\xfb\xf9\x63\xb0\x46\x1e\xd5\x19\x40\x1e\xf5\x2a\xde\x97\x2d\x37\x87\x55\x4b\xd8\x7c\x8b\x25\x1b\x60\xdc\xfc\x9d\xcd\x81\xdf\x92\xd6\x85\x9d\x9f\x25\xe6\xda\x8a\xca\xc4\x8e\x6d\xa6\x72\x4b\xdd\x54\xa8\x4b\xec\x9e\xa5\xf1\x12\x98\x3d\x77\x36\x04\x65\xad\x0e\x8d\x69\x2d\x2a\x8b\xfd\x63\xac\x2f\xc9\xbd\xbd\x1e\x8f\xa6\x52\xbf\xa8\xcf\xf3\x18\x73\xb8\xfe\x17\xbd\xdd\xe7\x4e\xfd\xa9\x37\xbf\x01\x00\x00\xff\xff\xef\x4b\x61\x54\xde\x00\x00\x00")

func configChainstorageEthereumGoerliProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumGoerliProductionYml,
		"config/chainstorage/ethereum/goerli/production.yml",
	)
}

func configChainstorageEthereumGoerliProductionYml() (*asset, error) {
	bytes, err := configChainstorageEthereumGoerliProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/goerli/production.yml", size: 222, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x4d\x6f\x1b\x37\x10\xbd\xef\xaf\x18\xb8\x67\x5b\x1f\xb6\xd2\x66\x81\x1c\xd2\xc4\x68\x8c\x34\x76\x11\xb8\x28\xd0\x0b\x31\x22\x67\xb5\x84\xb8\xe4\x86\x9c\x55\xa4\xfe\xfa\x82\x4b\x4a\x2b\xf9\x4b\x0e\xd2\xd4\xb7\x15\x39\x9c\x19\xce\x7b\x33\x8f\xfa\x09\x6e\x6b\x1d\xa0\xd2\x86\x40\x07\x58\x90\x25\x8f\x4c\x0a\xe6\x1b\x38\x69\x70\x49\x20\x9d\xad\xf4\xe2\xe4\x0c\xde\xdf\xc0\xf5\xcd\x2d\x5c\xbe\xbf\xba\x3d\x2b\xb0\xd5\x65\x01\xd0\xe0\x5a\xd8\xae\x11\x73\xe3\xe4\x52\x44\x2f\xa1\x84\xc9\x78\x3c\xbe\xbb\x17\x4a\x98\xc5\xc5\xb8\xf0\xd5\xf9\x25\xf9\xde\xb0\x00\x08\xec\x09\x1b\x6d\x17\x62\x8e\x2c\x6b\x11\xf4\x3f\x94\x8d\x87\x2d\x6d\x99\xfc\x0a\x4d\x09\x93\x70\xb0\xd1\x07\x71\x82\x56\x64\x59\xb0\x6e\x28\x7a\x6d\x0a\xfc\x1a\x62\x7a\xf8\x35\x08\x94\xd2\x75\x96\x4b\x50\xb4\x22\xe3\xda\x86\x2c\x17\x00\xf3\x4e\x2e\x89\x4b\x38\x39\x29\x00\x94\xf9\x12\xcd\x01\x14\x19\xdc\x88\x40\x32\x94\xf0\xba\xbf\x05\x80\xc5\xe8\x95\xd6\xd8\xb4\x86\x84\xac\x51\xdb\xc0\xce\xe3\x82\xf2\xd5\x04\x71\x4d\x9e\xba\x46\x34\xa8\xad\x25\x16\xca\x7c\xe9\x8f\xae\x74\xd0\x73\x6d\x34\x6f\xfa\xdc\x5c\xc7\xd9\xf7\xab\xde\xb7\xda\x58\x6c\x9c\x9a\xa7\xd8\xa9\x86\x8c\x73\xf3\x8d\xe1\xfa\xd3\xb9\x02\xc7\x4e\xa7\x4a\x1d\xf7\x21\x6a\xd2\x8b\x9a\x85\xb6\x8a\xd6\xcf\x71\x38\xdf\x6c\x8f\x3c\xe8\x7a\x45\x3e\x68\x67\x49\x89\xe3\x89\x0e\xb6\xc7\x53\x7e\xd0\x6f\x3e\xf7\x54\xee\x8f\xc4\x98\x6f\xb6\x67\xd5\x43\xf1\x5a\x4f\x41\x2f\xe2\xa9\xce\x1b\x41\xeb\x56\x7b\x64\xed\x6c\x09\xe7\xe3\xa6\x00\xf0\xb4\xe8\x7f\x75\xe1\x94\x30\xf0\xe9\xa4\xe7\x6a\x1f\x31\xf3\x0b\x19\x85\x74\x4d\x74\x14\x7a\xd3\xdf\xfe\xbe\xfa\xa3\x90\xa8\xc8\xca\xde\x06\x95\x8a\x7b\x5b\x62\xba\x18\xbc\x84\xfd\xdc\x4f\xb7\x89\x9d\x0e\x89\x79\x62\xb2\x31\x13\xd1\x92\xd7\x4e\x95\xf0\x73\xd1\x9f\x89\x2e\xd3\x8d\x02\xa3\xe7\x8c\x51\x09\xe3\x62\x20\xdc\x22\xe5\x66\x90\x29\x70\x09\xd3\xfe\x57\xc8\x08\x4d\x07\xc3\xd4\x5d\xe7\x61\xbb\x92\x02\xc0\xaf\xbf\xdf\xbc\xfb\xf8\xee\xc3\xdb\xab\x6b\x71\x79\xfb\xe1\xf2\xf3\xe5\x9f\x9f\x0a\x00\x69\x34\x59\x4e\x9e\x1b\x0c\x4c\x3e\x7d\x03\x90\x55\xad\xd3\x96\xc5\xc2\xbb\xae\xcd\x17\x05\x08\x06\x57\x74\xc4\x66\x85\x46\x2b\x64\xf7\xb4\xaf\x2d\x13\xee\xdc\x6b\x72\x70\xaf\x58\x80\x8a\x90\x3b\x9f\x83\x7a\x17\x88\x19\x45\x8b\x3e\x90\x2f\x81\x7d\x47\x05\x80\xf6\x9e\x7a\xb2\x44\x5e\x29\x1d\x18\x23\x50\x30\xb9\x88\xc3\x8c\x38\xce\xb2\x12\xae\x2f\x6f\xff\xba\xf9\xfc\x71\x77\x7f\xf1\xe9\xed\xd5\xf5\xf5\xe5\x6d\x91\x86\xa7\xc8\x23\xe4\x2e\xa1\xa4\x77\x7b\x00\x79\xb4\x0b\xca\xe3\xef\xa2\xa8\x3a\x2b\x23\xa0\x68\x44\x4a\xff\xe4\xa4\x08\x6a\xd9\x53\xa4\xe3\x5a\xd4\x84\x2a\xa6\xd9\xdf\xb8\x5f\x61\xb7\x24\x9b\x17\x0e\xb8\xbe\xa3\x54\xcd\xdc\x86\x72\x34\xb2\x15\x9f\x62\xab\xcf\xa4\xd3\x76\x8e\x81\xce\xa4\x6b\x46\xd8\xea\x11\xad\xdb\xd1\xfe\xd1\xd1\x36\xe5\x51\x4e\x79\xb4\x9a\x3c\x38\xc4\x3d\x05\xae\x3a\x93\xab\x16\xc8\xaf\x12\xde\x73\x6d\xd5\x10\xdf\x38\x89\xa6\x76\x81\xcb\xd7\xe3\xd7\xe3\x22\x18\x1c\x6e\x9f\x87\x87\x22\xc3\x98\x9d\x0e\xb4\xdb\x2e\x4f\x63\x93\xd1\xba\x25\xc9\xa4\xfa\x14\x2a\xe3\xd2\xa8\x3f\x85\xc6\x59\xcd\xce\xf7\xdf\xad\x33\x86\xd2\x67\xd2\x8a\x3b\x3f\x46\x3b\x8e\xbc\x99\xf4\x1b\xb1\x31\x0d\x2e\x69\xb4\x6b\x8a\x37\xd3\x7e\x43\x7a\x17\x82\xd8\x11\xaf\x00\x88\x53\xdc\x55\x22\x6c\xac\x14\xd6\xa9\x03\x56\xc4\xb4\x59\x47\x5c\x26\xfd\x57\x13\x01\xb5\x92\x84\xc1\xc0\x69\xb4\x94\x70\xde\x14\x07\xa9\xcf\x51\x2e\x2b\x1d\x13\x4e\x4c\x44\xc9\x7a\x15\x35\xc3\x13\xfb\x4d\x94\x38\xdd\x74\x8d\x40\x66\x6a\x5a\x0e\x25\x9c\x1f\x9a\x05\x59\x93\xea\x0c\x09\x76\xb9\xcb\xb3\xd8\x94\x30\x6b\xee\x98\xa6\x6d\x27\xa4\x71\x81\x06\xbb\xc9\x38\x19\xee\x4b\xf0\x74\x96\x05\x50\xd6\x24\x97\xa9\xcd\xb6\xe2\x9c\x77\xa2\xfa\x7a\x6a\xbd\x93\x14\x02\xa9\x38\x7c\x92\x8a\xc7\x81\x98\xc4\xb3\x6b\x84\x74\x56\x76\xde\xc7\x82\xd3\x9a\x3d\x4a\x76\x91\x38\xd3\x8b\xde\x82\x31\x2c\x85\xd1\xa1\x57\xe8\x0a\x3b\x93\x06\xfb\xb6\x42\x42\x91\xd4\x71\x54\x0e\xc9\x4e\x9b\x43\x0b\x5a\x93\xec\xf8\xd0\xe4\xa2\x3e\xb4\xd1\x2a\xce\x47\xde\x94\xbb\xa5\xb3\xa1\xec\x11\x03\xb2\xb2\x6e\x30\x72\xfa\xc5\x41\x90\xb5\x36\x03\xbb\xf7\xae\xf7\xd8\xc1\x57\xf9\xe0\xcb\x95\x72\xa8\x5e\x1c\x3e\x87\x2d\xf3\xcc\x7a\xce\x7e\x20\xa9\xe5\xd2\x55\xd5\xde\x23\x72\x36\x1e\x37\xe1\x1e\xe1\x27\xe3\xc7\x08\xbf\xdb\x69\xd1\xa3\x31\x64\x74\x68\xe2\x90\x7e\xa2\xe8\xf9\xfa\x59\x92\x25\x59\x8e\x8f\x80\x2c\x42\x7b\x9b\x87\xb2\x3c\x99\xc5\xde\xca\xc1\x7e\x3c\x6e\xf7\x87\x5b\x1e\xa2\xcf\xc4\xec\x97\xff\x11\xb3\xc9\xf8\x3e\x62\xb3\xc7\x07\x54\xbf\x51\xa1\x36\x6e\x45\x5e\x90\x8d\xaa\xaf\x76\xaa\xfe\x2d\x48\xfe\x78\x18\x06\xe5\x4a\xba\x75\xa7\xfa\x35\xa1\xe7\x39\xe1\x13\xe5\xfc\x7e\x80\xa6\xdf\x0d\xd0\x79\x38\xd2\x3c\x4f\xa0\x51\x45\x79\x8c\x8a\x5a\x42\x85\x26\xd0\x4e\x5d\xf2\x5f\x9e\x98\x6f\xd4\xdb\x28\x30\x72\x23\x4d\x72\x7b\x1f\xc8\x49\x5a\x0b\xe9\x75\x2d\xa4\x27\xe4\x87\x10\xdb\x1a\xec\x32\x19\xa2\xbe\x18\x0b\x76\x6f\x96\xed\x23\xe5\x3f\x1f\x9c\xcf\xc5\x78\x7a\x04\xe2\xc3\x16\x3c\xd2\x83\x2f\x56\xcf\xbd\x87\xdf\xf6\xb1\xda\xbf\xe8\x1e\x48\xe8\xdf\x00\x00\x00\xff\xff\x69\xfe\x0c\xe8\x06\x11\x00\x00")

func configChainstorageEthereumMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumMainnetBaseYml,
		"config/chainstorage/ethereum/mainnet/base.yml",
	)
}

func configChainstorageEthereumMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageEthereumMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/mainnet/base.yml", size: 4358, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x6e\x83\x30\x10\xc6\xf1\xdd\x4f\x71\x4a\x67\x10\x4a\x86\x2a\x9e\xd3\xa1\x4b\xb3\xb0\xa3\xc3\xfe\x02\x56\xec\x33\xb2\x0f\xd2\xbe\x7d\x05\xaa\xaa\x9b\xee\xd3\x5f\xbf\x37\xea\xe7\x50\xe9\x11\x22\x28\x54\x9a\x20\x28\xac\xf0\x34\xfe\xd0\x29\xf1\x13\xe4\xb2\x3c\xc2\x74\x6a\xe9\x76\xa7\xaf\x7b\x4f\x1f\xb7\xcf\xbe\x35\xfc\xaa\xd6\x10\xf1\xab\x0e\xec\x5c\x5e\x45\x2d\x79\x6c\x88\x79\x49\x10\x35\x44\xe3\xea\x9e\x50\x4b\xf8\xe6\xb4\x44\x34\x6e\xe6\x20\x55\x73\xe1\x09\x0d\x74\x46\xc1\x9a\x9a\xc4\x41\x04\xda\x78\x6c\xc6\xb1\x87\x38\x1c\xae\xf7\x05\xb5\x5a\x52\xa4\x25\x17\x8e\x7b\xd0\xfe\x51\xad\xcb\xc9\xbe\x9f\x2f\x17\x73\x98\x7b\x8f\x0d\xa2\x83\xf2\xb4\x3f\x44\x91\x15\x55\x2d\x9d\x4d\x45\xd9\x50\xf6\x75\x0c\xe2\x87\x7f\xb7\x6b\x8f\xb3\xd7\xee\xda\x99\xdf\x00\x00\x00\xff\xff\x09\xce\xe9\x04\x05\x01\x00\x00")

func configChainstorageEthereumMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumMainnetDevelopmentYml,
		"config/chainstorage/ethereum/mainnet/development.yml",
	)
}

func configChainstorageEthereumMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageEthereumMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/mainnet/development.yml", size: 261, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageEthereumMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumMainnetLocalYml,
		"config/chainstorage/ethereum/mainnet/local.yml",
	)
}

func configChainstorageEthereumMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageEthereumMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageEthereumMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x4e\xc3\x30\x18\xc4\xf1\xdd\x4f\x71\x2a\x73\xac\x88\x0e\xa8\x9e\xcb\xc0\x42\x97\xec\xd5\x17\xfb\x9a\x58\x8d\x3f\x47\xb6\x43\xe1\xed\x51\x23\x84\x6e\xbd\xff\xef\x05\xc3\x1c\x2b\x6e\x71\x21\x62\xc5\x44\x65\x91\xc6\x80\xf1\x07\x87\x24\x77\xc2\x67\xbd\xc5\xe9\x60\x71\xbe\xe0\xf3\x32\xe0\xfd\xfc\x31\x58\x23\x8f\xea\x0c\x20\x8f\x7a\x15\xef\xf3\xa6\xcd\x61\x2d\x39\x6c\xbe\xc5\xac\x06\x18\x37\x7f\x67\x73\xe0\xb7\xa4\x75\x61\xe7\x67\x89\x5a\x5b\x2e\x32\xb1\x63\x9b\x59\xb8\xa5\x2e\x49\x54\x65\xeb\x9e\xa9\xf1\x12\xa8\x9e\xbb\x1b\x42\x61\xad\x0e\x8d\x69\xcd\x45\x16\xfb\xe7\x58\x9f\x93\x7b\x7b\x3d\x1e\x4d\x65\xf9\x62\x79\x9e\xc7\xa8\xe1\xfa\x5f\xf4\x76\x9f\x3b\xf5\xa7\xde\xfc\x06\x00\x00\xff\xff\xae\x16\x62\xef\xdf\x00\x00\x00")

func configChainstorageEthereumMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageEthereumMainnetProductionYml,
		"config/chainstorage/ethereum/mainnet/production.yml",
	)
}

func configChainstorageEthereumMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageEthereumMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/ethereum/mainnet/production.yml", size: 223, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageOptimismMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x4d\x6f\x1b\x37\x13\xbe\xef\xaf\x20\xfc\x9e\x6d\x49\x4e\x9c\xb7\xd9\x5b\x9a\x04\xad\x91\xc6\x0e\x5a\x03\x05\x7a\x21\x66\xc9\x59\x2d\x21\x7e\x6c\x38\xb3\xb2\xd5\x5f\x5f\x70\xc9\xb5\x24\x47\x8e\x1c\x04\x89\x6f\x12\x39\x9c\xaf\xe7\xe1\x33\xdc\xff\x89\x9b\xce\x90\x68\x8d\x45\x61\x48\x2c\xd1\x63\x04\x46\x2d\x9a\x8d\x38\x71\xb0\x42\xa1\x82\x6f\xcd\xf2\xe4\x4c\xbc\xbb\x16\x57\xd7\x37\xe2\xfd\xbb\xcb\x9b\xb3\x0a\x7a\x53\x57\x42\x38\xb8\x93\x7e\x70\xb2\xb1\x41\xad\x64\xf2\x42\xb5\x58\xcc\xe7\xf3\x87\x7b\x54\x8b\x8b\xb4\x98\x16\x6e\x43\x5c\x61\x1c\x0d\x2b\x21\x88\x23\x82\x33\x7e\x29\x1b\x60\xd5\x49\x32\xff\x62\x31\xde\x6e\x19\xcf\x18\xd7\x60\x6b\xb1\xa0\xbd\x8d\x31\x48\x90\xb8\x46\xcf\x92\x8d\xc3\xe4\xd5\x55\x70\x4b\x29\x3d\xb8\x25\x09\x4a\x85\xc1\x73\x2d\x34\xae\xd1\x86\xde\xa1\xe7\x4a\x88\x66\x50\x2b\xe4\x5a\x9c\x9c\x54\x42\x68\xfb\x39\x99\x0b\xa1\xd1\xc2\x46\x12\x2a\xaa\xc5\xeb\xb1\x0a\x21\x3c\x24\xaf\x78\x07\xae\xb7\x28\x55\x07\xc6\x13\x87\x08\x4b\x2c\xa5\xc9\xd0\xb3\x71\x86\x9c\x74\x60\xbc\x47\x96\xda\x7e\x1e\x8f\xae\x0d\x99\xc6\x58\xc3\x9b\x31\xb7\x30\x70\xf1\xfd\x6a\xf4\xad\x37\x1e\x5c\xd0\x4d\x8e\x9d\x7b\xc8\xd0\xd8\x6f\x0c\x37\x9e\x2e\x1d\x38\x76\x3a\x77\xea\xb8\x0f\xd9\xa1\x59\x76\x2c\x8d\xd7\x78\xf7\x14\x87\xcd\x66\x3a\x72\xd0\xf5\x1a\x23\x99\xe0\x51\xcb\xe3\x89\x6e\x6d\x8f\xa7\x7c\xd0\x6f\x39\xf7\xb5\xdc\x1f\x89\xd1\x6c\xa6\xb3\xfa\x50\xbc\x3e\x22\x99\x65\x3a\x35\x44\x2b\xf1\xae\x37\x11\xd8\x04\x5f\x8b\x17\x73\x57\x09\x11\x71\x39\xfe\x1b\xe8\x14\x81\xf8\x74\x31\x72\x75\x8c\x58\xf8\x05\x0c\x52\x05\x97\x1c\xd1\x68\xfa\xdb\x3f\x97\x9f\x2a\x05\x1a\xbd\x1a\x6d\x40\xeb\xb4\x37\x11\x33\xa4\xe0\xb5\xd8\xcd\xfd\x74\x4a\xec\x74\x9b\x58\x44\x46\x9f\x32\x91\x3d\x46\x13\x74\x2d\xfe\x5f\x8d\x67\x92\xcb\x5c\x11\x31\x44\x2e\x18\xd5\x62\x5e\x6d\x09\xb7\xcc\xb9\x59\x60\x24\xae\xc5\x62\xfc\x47\x05\xa1\xc5\xd6\x70\xbc\x5d\xe7\x6e\x5a\xc8\xfe\xc5\xaf\x7f\x5c\xbf\xfd\xf0\xf6\xf7\x37\x97\x57\xf2\xfa\xd3\xcd\xe5\xc7\xcb\xbf\x3e\x56\x42\x28\x6b\xd0\x73\x76\xec\x80\x18\x63\xfe\x2d\x04\x7a\xdd\x07\xe3\x59\x2e\x63\x18\xfa\x52\xa7\x10\x64\x61\x8d\x47\x6c\xd6\x60\x8d\x06\x0e\x5f\xf7\x35\x11\xe1\x68\x59\x2d\x02\x0f\xb1\x04\x8d\x81\x90\x19\x64\x0f\x91\x30\xd6\xa2\x05\x4b\x58\x09\x61\x62\xc4\x91\x2c\x89\x57\xda\x10\x43\x02\x2a\x69\x5c\x52\x33\xe4\x24\x66\xb5\xb8\x7a\x7f\xf3\xf7\xf5\x9f\x1f\xee\x3b\x20\x3f\xbe\xb9\xbc\xba\x7a\x7f\x53\x65\xf5\x94\x59\x43\xbe\x60\x94\x8a\x61\x07\xa1\x08\x7e\x89\x45\xff\x5e\x26\xf0\x0d\x8d\x6c\x4e\x21\x5a\x1b\x6e\x13\x84\x3c\x50\x2d\x38\x0e\x58\xb5\x83\x57\x09\x71\xb0\x32\x17\x78\x72\x52\x91\x5e\x8d\x1c\x1a\xb8\x93\x1d\x82\x4e\x85\x8c\x3d\x19\x57\x38\xac\xd0\x97\x85\xbd\xcb\x70\xcf\xb9\x8e\xb9\xa7\x7a\x36\xf3\x2d\x9f\x42\x6f\xce\x54\x30\xbe\x01\xc2\x33\x15\xdc\x0c\x7a\x33\xc3\xbb\x7e\xb6\x7b\x74\x36\x95\x34\x2b\x25\xcd\xd6\x8b\x83\x2a\x1f\x91\xb8\x1d\x6c\xc9\x9d\x30\xae\x33\x23\x1a\xe3\xf5\x36\xbe\x0d\x0a\x6c\x17\x88\xeb\xd7\xf3\xd7\xf3\x8a\x2c\x6c\xbb\x53\xd4\x45\xa3\x65\x98\xfa\xbf\x25\xe6\xb4\x7e\x91\xe8\x99\x74\x36\xb4\x92\x36\x5e\x49\x1f\xf4\x97\xb8\xb1\x49\x9d\x79\x31\xfe\x72\xa9\xe5\x5e\xa1\xb4\x40\x9c\x6f\x7f\x9e\x21\x53\xdb\xc7\x49\xd2\x80\x5a\xb5\xc6\xda\x89\xc7\xa0\xd8\xac\x93\xae\x47\xe4\xb8\x49\x63\xc8\xb8\xc1\x49\x60\x46\xd7\x33\x65\xe7\x3b\x66\xa4\x3a\xd4\x83\x45\xc9\xa1\xdc\xc4\x32\x10\x4a\xca\xbb\xa6\x79\x3b\x48\x65\x03\xe1\xd6\xee\x7c\x9e\x0d\x77\xc7\xe4\xf9\x45\x19\x52\xaa\x43\xb5\xca\x77\x61\x1a\xa0\x65\x27\x4d\xc8\x88\x7d\x0c\x0a\x89\x50\x27\x81\xc8\x93\x36\x89\x56\x1e\x70\x83\x93\x2a\x78\x35\xc4\x98\x6e\x0e\xde\x71\x04\xc5\x21\x63\x97\x4d\x18\x68\x25\xad\xa1\x71\x8c\xb6\x30\xd8\xac\xbe\xf7\xcc\xd4\xa8\x4c\xd2\xb3\x9d\x6c\xdd\xbe\x05\xde\xa1\x1a\x78\xdf\xe4\x65\xb7\x6f\x63\x74\x12\x31\xde\xd4\xf7\x4b\x67\xdb\xbe\x27\x10\xd0\xab\xce\x41\xe2\xd5\xb3\xa1\xb0\x28\x28\xa8\xce\x58\x2d\x0f\x94\xf7\xd8\xc1\x57\xe5\xe0\xf3\xb5\x72\xdb\xbd\x24\x00\x31\x10\xc9\x07\x8a\x7a\xb4\x9f\x17\x3f\xac\x9f\x09\xe8\xd0\xb6\x0f\x5f\x7a\xfb\x74\x5f\x3c\xc6\xf6\xc5\xc4\xf6\x1e\x22\x58\x8b\xd6\x90\xcb\x22\xfa\x68\xc3\x4b\xe9\x65\x66\x2a\xf4\x9c\xa6\x74\x56\xab\x9f\x01\xc7\x03\x00\xd2\x83\x39\x78\xf3\x74\x28\x7e\xf9\x99\x50\xcc\xbf\xc4\xe2\xe2\x71\xe1\xf9\x46\x24\x7e\x7c\xaf\x4b\x67\xd3\x0b\x2e\x1c\xd0\xf0\x0e\x21\x72\x83\xf0\x95\x9e\x7d\x3f\x0a\xe7\xdf\x8d\xc2\x0b\x3a\x42\xfe\x36\x4d\xb0\x34\xf5\xb6\xcf\x97\xac\xff\xe5\xc3\x21\x25\x95\x66\x62\x1a\x01\x6a\xa3\xec\xce\x8d\x3a\x80\x16\xe5\x27\xaa\x54\x11\x81\x0f\xa1\x32\x19\xa0\x4f\xcf\x14\xbd\x1b\xf4\xd9\x90\xce\xf8\xde\x7f\x22\x3e\x79\x50\x3c\x5d\xd8\x9e\x8a\xe3\xf9\x11\x18\xf7\xef\xd2\x91\xcb\xf4\x6c\xfd\x9c\xda\x58\x65\xb3\xf4\xa0\xab\x84\x38\x3d\x94\xd0\x7f\x01\x00\x00\xff\xff\x7c\x7e\x9b\x4f\x4b\x10\x00\x00")

func configChainstorageOptimismMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageOptimismMainnetBaseYml,
		"config/chainstorage/optimism/mainnet/base.yml",
	)
}

func configChainstorageOptimismMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageOptimismMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/optimism/mainnet/base.yml", size: 4171, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageOptimismMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x6f\x83\x30\x10\xc5\xf1\xdd\x9f\xe2\x94\xce\x20\x54\x86\x28\x9e\xd3\xa1\x4b\xb3\xb0\xa3\xc3\x7e\x01\x0b\x6c\x23\xdf\x85\xb4\xdf\xbe\x8a\x55\xf5\xbd\xf5\xaf\xdf\x1b\x0d\x4b\x10\xba\x87\x0d\x14\x84\x66\x24\x14\x56\x78\x9a\x7e\xe8\x14\x79\x05\xb9\x9c\xee\x61\x3e\xb5\x74\xbd\xd1\xd7\x6d\xa0\x8f\xeb\xe7\xd0\x1a\x7e\x8a\x35\x44\xfc\x94\x91\x9d\xcb\x8f\xa4\x96\x3c\x0e\x6c\x79\x8f\x48\x6a\x88\xa6\x87\x5b\xa1\x96\xf0\xcd\x71\xdf\xd0\xb8\x85\x43\x12\xcd\x85\x67\x34\x79\xd7\x10\x83\xc4\x26\x72\x48\x09\xda\x78\x1c\xc6\xb1\x47\x72\xa8\xae\xf7\x05\x22\x96\x14\x71\xcf\x85\xb7\x57\xd0\xfe\x51\xad\xcb\xd1\x9e\xdf\xfb\xde\x54\xf3\xd5\x4f\x5b\x76\xeb\x28\xca\x45\xc7\x05\x61\x5e\xd4\x52\x7f\xee\xea\x8c\xa0\x1c\x28\x35\x0b\xc9\x8f\xff\x76\xd7\xd6\xdb\x4b\x77\xe9\xcc\x6f\x00\x00\x00\xff\xff\x4b\x76\x14\xbe\x09\x01\x00\x00")

func configChainstorageOptimismMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageOptimismMainnetDevelopmentYml,
		"config/chainstorage/optimism/mainnet/development.yml",
	)
}

func configChainstorageOptimismMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageOptimismMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/optimism/mainnet/development.yml", size: 265, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageOptimismMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageOptimismMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageOptimismMainnetLocalYml,
		"config/chainstorage/optimism/mainnet/local.yml",
	)
}

func configChainstorageOptimismMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageOptimismMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/optimism/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageOptimismMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xb1\x6e\xc3\x30\x0c\x84\xe1\x5d\x4f\x71\x48\x67\x1b\x46\x33\x14\xd1\x9c\x0e\x5d\x9a\xc5\x7b\x40\x53\x8c\x43\xc4\xa2\x0c\x51\x6e\xda\xb7\x2f\x12\x14\xc5\xad\xf7\x7f\x2f\x18\xaf\xea\xb8\xe8\x22\x50\xc7\x2c\x26\x95\x9a\x24\x4c\x3f\xd8\x65\xba\x09\xb8\xd8\x45\xe7\x5d\x8f\xe3\x09\x9f\xa7\x11\xef\xc7\x8f\xb1\x0f\x74\xf7\x18\x00\xba\xfb\x99\x98\xcb\x66\x2d\x62\xad\x25\x6d\xdc\xb4\x58\x00\xa6\x8d\x6f\xd2\x22\xe4\x9b\xf2\xba\x48\xc7\x57\x52\xf3\x56\x2a\xcd\xd2\x95\xb5\x69\x56\xcf\x5d\x26\x35\x93\xd6\x3d\xd2\xc0\x94\xc4\x58\x9e\x6e\x4a\x55\xdc\x23\x9a\xe4\xb5\x54\x5a\xfa\x3f\xa7\xe7\x92\xe3\xdb\xeb\x7e\x1f\x5c\xea\x97\xd4\xc7\x79\x52\x4b\xe7\xff\x62\xe8\x9f\x8b\x87\xe1\x30\x84\xdf\x00\x00\x00\xff\xff\x4c\x97\x1c\x66\xdf\x00\x00\x00")

func configChainstorageOptimismMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageOptimismMainnetProductionYml,
		"config/chainstorage/optimism/mainnet/production.yml",
	)
}

func configChainstorageOptimismMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageOptimismMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/optimism/mainnet/production.yml", size: 223, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstoragePolygonMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\xdb\x6e\x1b\x37\x13\xbe\xdf\xa7\x20\xfc\x5f\xdb\x3a\x38\xfa\xdb\x2c\x90\x8b\x34\x09\x52\x23\xa9\x1d\x14\x06\x8a\xf6\x86\x98\x25\x67\xb5\x84\xb8\xe4\x86\x9c\x55\xa4\x3e\x7d\xc1\xc3\x6a\x25\xf9\x20\x07\x8d\xeb\x3b\x2d\x39\x9c\xf9\x66\xbe\x39\xe9\x7f\xec\xb6\x51\x9e\xd5\x4a\x23\x53\x9e\x2d\xd1\xa0\x03\x42\xc9\xaa\x2d\x3b\x6b\x61\x85\x4c\x58\x53\xab\xe5\xd9\x05\x7b\x7f\xc3\xae\x6f\x6e\xd9\x87\xf7\x57\xb7\x17\x05\x74\xaa\x2c\x18\x6b\x61\xc3\x4d\xdf\xf2\x4a\x5b\xb1\xe2\x41\x8b\x2f\xd9\x6c\x3a\x9d\x1e\xdf\xf9\x92\x2d\xc2\x61\x38\xf8\x66\xdd\x0a\x5d\x14\x2c\x18\xf3\xe4\x10\x5a\x65\x96\xbc\x02\x12\x0d\xf7\xea\x6f\xcc\xc2\xe3\x95\x32\x84\x6e\x0d\xba\x64\x33\x7f\x70\x11\x8d\x58\x8e\x6b\x34\xc4\x49\xb5\x58\xb2\xd9\xa2\x2d\xe0\x9b\x0f\xf0\xe0\x9b\xe7\x20\x84\xed\x0d\x95\x4c\xe2\x1a\xb5\xed\x5a\x34\x54\x30\x56\xf5\x62\x85\x54\xb2\xb3\xb3\x82\x31\xa9\xbf\x06\x71\xc6\x24\x6a\xd8\x72\x8f\xc2\x97\xec\x75\xf4\x82\x31\x03\x41\x2b\x6e\xa0\xed\x34\x72\xd1\x80\x32\x9e\xac\x83\x25\x66\xd7\x78\x67\xf5\x76\x69\x0d\x6f\x41\x19\x83\xc4\xa5\xfe\x1a\x5f\xae\x95\x57\x95\xd2\x8a\xb6\x11\x9a\xed\x29\xab\xfe\x7f\x54\x2d\xb7\x06\x5a\x2b\xab\x64\x3a\x85\x90\xa0\xd2\xdf\x67\x2d\x3e\xce\xfe\x9f\x7a\x9c\xe2\x74\x52\x05\x6f\x50\x2d\x1b\xe2\xca\x48\xdc\x3c\x45\x5f\xb5\x1d\x9e\xdc\xa7\x79\x8d\xce\x2b\x6b\x50\xf2\xd3\x30\x47\xd9\x93\x80\xef\x55\x9b\x9f\x3d\x86\xfc\x01\x13\xd5\x76\x78\x2b\xef\x31\xd7\x39\xf4\x6a\x19\x1e\xf5\x4e\x73\xdc\x74\xca\x01\x29\x6b\x4a\x76\x39\x6d\x0b\xc6\x1c\x2e\xe3\x57\xef\xcf\x11\x3c\x9d\xcf\x62\x96\x46\x83\x39\xb3\x80\x80\x0b\xdb\x06\x45\x3e\x8a\x7e\xfc\xeb\xea\x4b\x21\x40\xa2\x11\x51\x06\xa4\x0c\x77\x43\x4a\xda\x60\xbc\x64\xfb\xd0\xcf\x33\xae\xf3\x11\x97\x43\x42\x13\x80\xf0\x0e\x9d\xb2\xb2\x64\x3f\x15\xf1\x49\xd0\x98\xfc\xf1\x04\x8e\x32\x3f\x25\x9b\x16\x63\xaa\x2d\x13\x34\x0d\x84\x9e\x4a\x36\x8f\x5f\x3e\xd3\x33\x1b\x05\x63\x59\xcd\xfd\x70\x90\xf4\xb3\x5f\x3e\xdf\xbc\xfb\xf4\xee\xd7\xb7\x57\xd7\xfc\xcb\xcd\xe7\x3f\x3f\xde\x5c\x17\x8c\x09\xad\xd0\x50\xd2\xdb\x82\x27\x74\xe9\x37\x63\x68\x64\x67\x95\x21\xbe\x74\xb6\xef\xb2\x97\xd1\x01\xb7\x1d\x64\x42\x35\x03\x11\xb6\x1d\x85\x86\x91\xf0\x68\x58\xe3\x09\x25\x6b\xd0\x4a\x02\xd9\xc7\x8d\x0d\x69\x72\xe4\xf6\xf4\xc0\xed\xf0\x55\x23\x50\xef\xb2\x51\x67\x3d\x12\x01\xef\xc0\x79\x74\x25\x23\xd7\x63\xc1\x98\x72\x0e\x63\x26\x85\xa4\x93\xca\x13\x04\x1a\xd9\x65\xac\x6c\x83\x14\x9a\x5c\xc9\xae\x3f\xdc\xfe\x71\xf3\xfb\xa7\x21\x40\xfc\xb7\xb7\x57\xd7\xd7\x1f\x6e\x8b\xd4\x54\x79\x6a\x2d\xc7\xd9\x26\x9c\xdd\xa3\xcf\x81\x59\x62\xee\x8a\xaf\x8a\xba\x37\x22\xd0\x0d\x9a\x27\xf4\x67\x67\x85\x97\xab\x98\x3f\x3d\x35\xbc\x41\x90\x01\x65\x74\x38\x9e\x90\x5d\xa1\xc9\x07\x07\x75\xb0\xcb\xb7\x86\xa8\xf3\xe5\x64\x62\x6a\x3a\x87\x4e\x5d\x08\xab\x4c\x05\x1e\x2f\x84\x6d\x27\xd0\xa9\x09\x6e\xba\xc9\xfe\xd3\x49\x46\x3c\xc9\x88\x27\xeb\xd9\xbd\xad\xdd\xa1\xa7\xba\xd7\x39\x66\x1e\xdd\x3a\xa5\x43\xa5\x8c\x1c\xcd\x6b\x2b\x40\x37\xd6\x53\xf9\x7a\xfa\x7a\x5a\x78\x0d\xa3\xf3\xb9\xab\x48\xd4\x04\x71\xb0\x1c\x24\xe5\x70\xbe\x08\x15\x88\x9b\x0e\x05\xa1\x8c\x18\x6a\x6d\xd3\x04\x38\x67\xad\x35\x8a\xac\x8b\xbf\x3b\xab\x35\xa6\x9f\x69\x84\x1c\x7d\x4c\x76\x29\xf2\x66\x16\x2f\x42\xd5\x6a\x58\xe1\x64\x57\x32\x6f\x42\x95\x84\x4e\x6e\x6b\xee\xb7\x46\x70\x63\xe5\x7e\x02\x24\x8c\xa4\x02\x09\xf3\xf8\xab\x0d\xec\x19\x81\x5c\x83\xa7\xd4\x63\x82\x58\x5b\x1c\x00\xad\x40\xac\x6a\x15\xe0\xa5\xb4\x03\x41\x6a\x1d\x26\x47\x2c\x90\x30\xe7\x54\xdb\xb7\x7b\xd5\x71\x79\x28\xe6\x45\x83\xb2\xd7\xc8\xc9\xe6\x8a\xcf\x23\x27\x87\x67\x5f\x34\x5d\x5b\x2e\xb4\xf5\x38\xca\xcd\xa6\x49\x70\x7f\x0e\xcf\x17\x79\x0a\x8a\x06\xc5\x2a\xd5\xd4\x30\xa1\xf3\x4d\x0d\x4a\xdb\x35\x3a\x8e\x26\x94\x90\xdc\x95\x48\xaa\x67\x87\x9d\xb3\x02\xbd\x47\x19\x7a\x54\x9a\xf2\x43\x9c\x52\xd6\x08\x6b\x44\xef\x5c\x08\x3d\x6e\xc8\x81\x20\x1b\x73\x68\x9e\x44\x08\xfc\x8a\x6b\xe5\xe3\x0c\xaf\xa1\xd7\xa9\xff\x0f\xe1\xe3\x12\x85\x0a\x2d\x75\xf4\x64\xde\x1e\x4a\xe0\x06\x45\x4f\x87\x22\xaf\x9a\x43\x19\x25\x43\x23\xa5\x6d\xb9\x3b\xba\x18\x39\x09\x04\xa1\x11\x4d\x0b\x21\xbf\x5f\x9c\x21\xd1\x28\x3d\x26\xfa\x9e\x7b\x0f\x3d\x9c\x37\x2f\x1c\xc9\x31\x78\xa1\x0d\x39\xeb\x3d\x3f\x6a\xda\x27\xc3\xb9\x78\xc6\x84\x17\x2b\x5b\xd7\x7b\x5b\xe6\x62\x3a\x6d\xfd\x9d\x62\x98\x4d\x1f\x2a\x86\xdd\x4d\x07\x0e\xb4\x46\xad\x7c\x1b\xda\xf5\x23\x41\xcf\xee\xe7\xd1\x2d\xd0\x50\xd8\x15\xe2\xd8\x3d\xb8\x3c\x1c\xdf\x97\xa1\xec\xb2\xad\xe7\xa7\xed\x88\xa8\xb0\xd4\xa7\x6e\xfa\x44\xca\x7e\xfe\x0f\x29\xbb\xbc\xcb\xd7\xe2\xe1\xd6\x75\xaa\x73\x3d\x9d\xc7\xe7\x67\x61\x9c\x60\x69\x7e\x1d\x05\xbf\x41\x70\x54\x21\x3c\x12\xcd\x7f\xcf\xcf\xfc\x07\x96\xd4\x1d\x3e\xe6\x8b\x93\x7c\xd4\x61\x76\x86\x79\x5b\xb2\x1a\xb4\x1f\xc7\x4b\xfe\x53\x14\x10\x87\x69\x1c\x26\x8c\xd8\x0a\xbd\x5b\xc5\x8e\xa8\x9c\x27\x2e\x7d\x5a\xc2\xb9\x70\x08\x74\x1f\x67\x83\xc0\x5d\x24\x2f\x96\x06\xbb\xe5\x65\xd8\x56\x7e\x78\xdf\x7c\x2a\xc9\xf3\xef\x6b\x9b\x8f\xad\x10\x2f\x1b\xd2\xbd\x25\x70\xd8\x5c\xe3\xda\x77\x0f\xa0\x7f\x02\x00\x00\xff\xff\x6f\xe9\xf8\x98\x29\x11\x00\x00")

func configChainstoragePolygonMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstoragePolygonMainnetBaseYml,
		"config/chainstorage/polygon/mainnet/base.yml",
	)
}

func configChainstoragePolygonMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstoragePolygonMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/polygon/mainnet/base.yml", size: 4393, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstoragePolygonMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8d\xb1\x6e\xc3\x30\x0c\x05\x77\x7d\x05\x91\xce\x36\x8c\x64\x28\xa2\x39\x1d\xba\x34\x8b\x77\x83\x96\x5e\x1c\xc1\x12\x65\x48\x8c\xd3\xfc\x7d\x61\xa3\x68\xc1\x89\xb8\xe3\xf1\x8d\xfa\x7b\xa8\x74\x0b\x11\x14\x2a\x4d\x10\x14\x56\x78\x1a\x5f\x74\x48\x3c\x83\x5c\x96\x5b\x98\x0e\x2d\x5d\xae\xf4\x75\xed\xe9\xe3\xf2\xd9\xb7\x86\x9f\xd5\x1a\x22\x7e\xd6\x81\x9d\xcb\x0f\x51\x4b\x1e\x2b\x62\x5e\x12\x44\x0d\xd1\xf8\x70\x33\xd4\x12\xbe\x39\x2d\x11\x8d\xbb\x73\x90\xaa\xb9\xf0\x84\x66\xc9\xf1\x35\x65\x69\x12\x07\x11\x68\xe3\xb1\x1a\xc7\x1e\xe2\xb0\x67\xbd\x2f\xa8\xd5\x92\x22\x2d\xb9\x70\xdc\x84\xf6\xb7\xd4\xba\x9c\xec\xfb\xf1\x74\x32\x7b\x72\xf3\xc7\x98\xdd\x3c\x28\x4f\xdb\x42\x54\x95\xc7\x08\x4b\x47\x43\x84\x15\xa2\xff\x28\xb2\xa2\xea\x86\x2a\xca\x8a\xb2\x5f\x07\xf1\xc3\xdf\xcb\xae\xdd\xc7\x9e\xbb\x73\x67\x7e\x02\x00\x00\xff\xff\x7d\xc2\x36\xaf\x1f\x01\x00\x00")

func configChainstoragePolygonMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstoragePolygonMainnetDevelopmentYml,
		"config/chainstorage/polygon/mainnet/development.yml",
	)
}

func configChainstoragePolygonMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstoragePolygonMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/polygon/mainnet/development.yml", size: 287, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstoragePolygonMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstoragePolygonMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstoragePolygonMainnetLocalYml,
		"config/chainstorage/polygon/mainnet/local.yml",
	)
}

func configChainstoragePolygonMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstoragePolygonMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/polygon/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstoragePolygonMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\x31\x6f\x83\x30\x10\x46\x77\xff\x8a\x53\x3a\x83\x50\x33\x54\xf1\x9c\x0e\x5d\x9a\x85\x1d\x1d\xf6\x07\xb1\xb0\x7d\x96\x6d\x4a\xf2\xef\x2b\x48\x55\xdd\xf2\x0d\xef\x3d\xdd\x1b\xf5\x77\x57\x68\x72\x1e\xe4\x0a\xcd\x88\xc8\x5c\x61\x69\x7c\xd2\x29\xf0\x02\x32\x12\x27\x37\x9f\x5a\xba\xde\xe8\xfb\xd6\xd3\xe7\xf5\xab\x6f\x15\x6f\x45\x2b\x22\xde\xca\xc0\xc6\xc8\x1a\xab\xa6\x94\xc5\xae\xa6\x3a\x89\x8a\x68\x5c\xcd\x82\xaa\x09\x0f\x0e\xc9\xa3\x31\x77\x76\xb1\x54\xc9\x3c\xa3\x49\xe2\x9f\xb3\xc4\x26\xb0\x8b\x11\xb5\xd9\x4d\x65\xd8\x22\x1a\x1c\x59\x6b\x33\x4a\xd1\x54\x11\x92\x64\xf6\xed\x5f\xa6\x35\x12\xf4\xc7\xfb\xf9\xac\x0a\xf2\x0f\xf2\x0e\x8f\x2e\xda\xe1\xdf\xe8\xda\xe3\xf4\xa5\xbb\x74\xaa\x78\xde\x09\x3c\x12\x4c\x85\x1d\x36\xc9\xcb\xe4\xe5\xf5\x7b\x43\x41\xa2\xab\x92\x8f\x9d\xc4\x7b\xbc\x66\xa9\x19\x1c\x90\xd5\x6f\x00\x00\x00\xff\xff\x07\x1f\xc3\xfd\x1d\x01\x00\x00")

func configChainstoragePolygonMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstoragePolygonMainnetProductionYml,
		"config/chainstorage/polygon/mainnet/production.yml",
	)
}

func configChainstoragePolygonMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstoragePolygonMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/polygon/mainnet/production.yml", size: 285, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageSolanaMainnetBaseYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x4b\x6f\x1b\x37\x10\xbe\xef\xaf\x20\xdc\xb3\xad\x87\xad\xb4\xd9\x9b\x9b\x04\xad\x91\xd4\x2e\x5a\x03\x05\x7a\x21\x66\xc9\x59\x2d\x21\x3e\x36\xe4\xac\x22\xf5\xd7\x17\x7c\xc8\x2b\x29\xb6\xe5\x22\x6d\x7d\xd3\x92\xc3\x79\x7d\x1f\xbf\xa1\xbe\x63\xf7\x9d\x0a\xac\x55\x1a\x99\x0a\x6c\x89\x16\x3d\x10\x4a\xd6\x6c\xd9\x99\x81\x15\x32\xe1\x6c\xab\x96\x67\x17\xec\xfd\x1d\xbb\xbd\xbb\x67\x1f\xde\xdf\xdc\x5f\x54\xd0\xab\xba\x62\xcc\xc0\x86\xdb\xc1\xf0\x46\x3b\xb1\xe2\xd1\x4b\xa8\xd9\x6c\x3a\x9d\x1e\xef\x85\x9a\x2d\xe2\x62\x5c\xf8\xe2\xfc\x0a\x7d\x32\xac\x18\x0b\xe4\x11\x8c\xb2\x4b\xde\x00\x89\x8e\x07\xf5\x17\x16\xe3\x71\x4b\x59\x42\xbf\x06\x5d\xb3\xf9\x62\x6a\xc2\xc1\x5e\x8a\xe3\x38\xae\xd1\x12\x27\x65\x30\x3a\x36\x15\x7c\x09\x31\x43\xf8\x12\x38\x08\xe1\x06\x4b\x35\x93\xb8\x46\xed\x7a\x83\x96\x2a\xc6\x9a\x41\xac\x90\x6a\x76\x76\x56\x31\x26\xf5\xe7\x68\xce\x98\x44\x0d\x5b\x1e\x50\x84\x9a\xbd\x4d\x85\x30\x66\x21\x7a\xc5\x0d\x98\x5e\x23\x17\x1d\x28\x1b\xc8\x79\x58\x62\xa9\x8e\x07\xa7\xc1\x02\x37\xa0\xac\x45\xe2\x52\x7f\x4e\x07\xd7\x2a\xa8\x46\x69\x45\xdb\x94\x99\x1b\xa8\x78\x7e\x93\x3c\xcb\xad\x05\xe3\x64\x93\x23\xe7\x26\x12\x34\xfa\x1f\x05\x4b\x67\x4b\xf5\xa7\xce\xe6\x2e\x9d\xf2\xc0\x3b\x54\xcb\x8e\xb8\xb2\x12\x37\x2f\x71\xd7\x6c\x77\x47\x1e\x71\xbc\x46\x1f\x94\xb3\x28\xf9\xe9\x24\x47\xdb\x53\xe9\x3e\xea\xb5\x9c\x7a\x2e\xef\x27\x22\x34\xdb\xdd\x59\xf9\x75\xb4\xde\x63\x50\xcb\x78\x66\xf0\x9a\xe3\xa6\x57\x1e\x48\x39\x5b\xb3\xcb\xa9\xa9\x18\xf3\xb8\x4c\x5f\x43\x38\x47\x08\x74\x3e\x4b\xfc\x4c\xf1\x0a\xa7\x80\x80\x0b\x67\xa2\xa3\x90\x4c\x7f\xfa\xf3\xe6\xd7\x4a\x80\x44\x2b\x92\x0d\x48\x19\xf7\x76\x64\x74\x31\x78\xcd\xf6\x33\x3f\xcf\x69\x9d\x8f\x69\x79\x24\xb4\x31\x0f\xde\xa3\x57\x4e\xd6\xec\xfb\x2a\x9d\x88\x0e\x73\x35\x81\xc0\x53\xc1\xa6\x66\xd3\x6a\x24\xd9\x32\x67\xa6\x81\x30\x50\xcd\x66\xe9\x2b\x14\x6c\x66\xa3\x61\xba\x4f\x57\xd3\x7c\xe9\xd2\x5a\x0e\xc1\x7e\xfc\x74\xf7\xee\xe3\xbb\x9f\xaf\x6f\x6e\xf9\xef\x77\x9f\xae\x6f\xaf\x2b\xc6\x84\x56\x68\x29\x7b\x36\x10\x08\x7d\xfe\xcd\x18\x5a\xd9\x3b\x65\x89\x2f\xbd\x1b\xfa\x52\x26\x63\x41\xc3\x1a\x4f\xd8\xac\x41\x2b\x09\xe4\x9e\xf7\xb5\x63\xc1\x51\x5d\xd3\x83\xba\xe2\x57\x8b\x40\x83\x2f\x41\xbd\x0b\x48\x04\xbc\x07\x1f\xd0\xd7\xac\x05\x1d\xb0\x62\x4c\x79\x8f\x89\x29\x91\x54\x52\x05\x82\x88\x53\x54\xb6\xa8\x61\x48\x51\xc2\x6a\x76\xfb\xe1\xfe\x8f\xbb\xdf\x3e\x96\xfa\xf9\x2f\xd7\x37\xb7\xb7\x1f\xee\xab\xac\x98\x3c\x8b\xc6\x11\x99\x84\x77\x7b\xf0\x78\xb0\x4b\x2c\x8a\x77\x15\x71\x57\x21\xd1\x58\xea\xcf\xbc\xf7\x4e\x60\x08\xce\xd7\x8c\xfc\x80\x55\x3b\x58\x11\xc1\x06\xcd\x73\x69\x67\x67\x55\x90\xab\x44\x9e\x81\x3a\xde\x21\xc8\x58\x42\xea\x46\x5a\x21\xb7\x42\x5b\x16\x0e\xee\xc0\x03\xd9\x3a\xa2\x3e\xd4\x93\x89\x6d\xe9\x1c\x7a\x75\x21\x9c\xb2\x0d\x04\xbc\x10\xce\x4c\xa0\x57\x13\xdc\xf4\x93\xfd\xa3\x93\x5c\xce\xa4\x94\x33\x59\xcf\x1e\xd5\x74\x8f\x81\xda\x41\x97\xcc\x03\xfa\x75\x66\x42\xa3\xac\x1c\xa3\x6b\x27\x40\x77\x2e\x50\xfd\x76\xfa\x76\x5a\x05\x0d\x63\x67\x8a\x9c\x48\xd4\x04\x35\x9b\x2d\xa6\x07\x8c\x7c\x58\x37\x97\xd3\xc8\x4b\xdc\xf4\x28\x08\x65\x4a\xa3\xd5\x2e\x4b\xff\x39\x33\xce\x2a\x72\x3e\xfd\xee\x9d\xd6\x98\x7f\xe6\xd9\x91\x3e\xa2\x22\xbb\x96\x87\xad\x15\xdc\x3a\x79\x00\x76\x0a\x4a\x2a\x36\x75\x9e\x7e\x99\x88\x95\x15\xc8\x35\x04\xca\x7a\x51\xb3\x4b\x53\x1d\x44\x6d\x40\xac\x5a\x15\x63\x65\x8a\x81\x20\xb5\x8e\x03\xc0\x23\xf9\x6d\x9c\x56\xca\x0c\x86\x03\x11\x9a\x9e\x42\xcd\x2e\x0f\xcd\x82\xe8\x50\x0e\x1a\x39\xb9\x72\x7d\xcb\xe4\xa8\xd9\xc2\x1c\x99\xe6\x6d\xc7\x85\x76\x01\x47\xbb\xd9\x34\x1b\xee\x0f\xd4\xf9\xa2\xcc\x32\xd1\xa1\x58\xe5\xfb\xb3\x1b\xb5\x65\x27\x0e\x52\x8f\x85\x77\x28\xa3\xaa\xe4\x99\x1c\x75\x2e\xcf\xc1\xc1\x70\xe1\xac\x18\xbc\x8f\xb7\x0d\x37\xe4\x41\x90\x8b\xb8\xbf\xb9\x4a\x16\x04\x61\xc5\xb5\x0a\x69\xd8\xb6\x30\xe8\xac\xd6\xbb\x0e\x71\x89\x42\x45\x05\x1c\x93\x9d\x9b\x43\x0b\xdc\xa0\x18\xe8\xd0\xe4\xaa\x3b\xb4\x51\x32\x0a\x1f\x6d\xeb\x87\xa5\x8b\xb1\xed\x11\x03\xb4\xa2\x33\x10\x29\xf9\xea\x20\x88\x4e\xe9\x91\x98\x7b\xe5\x3d\x75\xf0\x4d\x39\xf8\x7a\xad\x1c\xbb\x17\x95\xc3\xbb\x10\xf8\x91\x08\x9f\xec\xe7\xe2\x3f\x24\xb5\x58\xb9\xb6\xdd\x7b\x12\xce\xc2\x57\x6c\x9f\x3d\x45\xf6\xd9\x8e\xec\x3d\x78\xd0\x1a\xb5\x0a\x26\x6b\xef\x93\x0d\x2f\xa5\x97\x39\x2b\xd0\x52\x9c\xeb\x59\xe8\xfe\x0f\x38\x8e\x00\x88\x2f\xeb\x2c\x6b\x2f\x84\xe2\x87\xd7\x85\x62\xbe\x78\x52\x76\xbe\x06\xa2\x34\xf5\xd5\xa8\x3f\x0e\x8c\x3c\x2e\x8e\x5a\xdc\x21\x78\x6a\x10\x9e\xe9\xd9\xb7\xa3\x30\xff\x66\x14\x16\xe5\xb9\xf6\x1c\xff\xdb\x38\xc2\xe2\xd8\x2b\x43\x7a\x37\x00\xca\x5f\x8c\x98\x56\x9c\x89\x71\x06\x88\xad\x88\x8f\xa7\xcb\xc7\x00\x9b\xe7\xab\x13\xf2\xbb\x96\x0b\x8f\x40\x8f\x01\xb3\x33\x40\x1b\x1f\x38\x72\x2f\xe8\xab\x61\xfd\xf0\x20\xd8\x3d\x07\xfe\x75\x69\x7b\x29\x92\xf3\xd3\x40\x1e\xfe\x37\x7e\x7a\x92\xbf\x6e\x4b\xf7\x1e\x56\xbb\x07\x61\x7a\x70\x3d\x92\xd0\xdf\x01\x00\x00\xff\xff\x2c\x3e\x29\x96\x79\x10\x00\x00")

func configChainstorageSolanaMainnetBaseYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageSolanaMainnetBaseYml,
		"config/chainstorage/solana/mainnet/base.yml",
	)
}

func configChainstorageSolanaMainnetBaseYml() (*asset, error) {
	bytes, err := configChainstorageSolanaMainnetBaseYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/solana/mainnet/base.yml", size: 4217, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageSolanaMainnetDevelopmentYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xd0\xbf\x8e\xdc\x20\x10\x06\xf0\x9e\xa7\x18\x5d\x6a\x5b\xbe\xbb\x44\xb9\xa5\xde\x14\x69\xb2\xcd\xf6\x68\x0c\x63\x1b\x19\x86\x15\x33\xde\x3f\x6f\x1f\xd9\xce\x66\xa1\x41\xfa\x3e\x7e\x82\xf9\x06\xe7\x29\x0a\x0c\x31\x11\x44\x81\x91\x98\x2a\x2a\x05\xe8\x1f\xf0\x96\x71\x26\xf0\x85\x87\x38\xbe\xb5\x70\x3c\xc1\x9f\xd3\x19\x7e\x1d\x7f\x9f\x5b\x83\x37\xb1\x06\x00\x6f\xe2\xd0\xfb\xb2\xb0\x5a\x08\x74\xa5\x54\x2e\x99\x58\x0d\x40\xbf\xf8\x99\xd4\x02\xdd\x31\x5f\x12\x35\x7e\xc2\xc8\xa2\xa5\xe2\x48\x8d\x94\x84\x8c\x4d\xc6\xc8\x4c\xda\x04\xba\x1a\x8f\x81\xd8\xd3\xa6\x86\x50\x49\xc4\x82\x52\xbe\x94\x8a\x69\x2d\xb4\xff\xa0\xd6\x97\x6c\x7f\x7e\x7c\x7e\x9a\x4d\x5c\xfb\x7d\x2a\x7e\x76\xa2\x58\xd5\x4d\x14\xc7\x49\x2d\x7c\x75\xfb\x32\x42\xf5\x4a\x75\xab\x45\x0e\xee\xbf\xdd\xb5\xdb\xb6\x87\xee\xd0\x19\x49\xf8\x82\x76\xc2\x05\x4a\x8a\x16\xde\x57\xe4\x19\x69\xcc\xf4\x0a\xb2\x01\x28\x8b\xba\x32\x38\x79\xb0\x77\x5c\x02\xb9\x10\x45\x71\xfd\xc8\xf3\xa6\x46\xaa\x16\x3e\xb6\x53\x26\x27\x91\x3d\xb9\x84\xa2\x6e\x33\x2d\xbc\xff\xc8\xe6\x56\xea\x3c\xa4\xb2\x4f\xb5\x47\x3f\x0f\x31\xa5\xfd\xd9\x00\xbc\x64\xe7\x0b\xfb\xa5\x56\x62\x75\x74\xd7\x8a\x5e\x4b\x15\x0b\xdf\xbf\xcc\xdf\x00\x00\x00\xff\xff\x76\xe7\x46\xe6\xc3\x01\x00\x00")

func configChainstorageSolanaMainnetDevelopmentYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageSolanaMainnetDevelopmentYml,
		"config/chainstorage/solana/mainnet/development.yml",
	)
}

func configChainstorageSolanaMainnetDevelopmentYml() (*asset, error) {
	bytes, err := configChainstorageSolanaMainnetDevelopmentYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/solana/mainnet/development.yml", size: 451, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageSolanaMainnetLocalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0e\xc2\x20\x10\x06\xe0\x9d\xa7\xf8\x53\xf7\xa6\x6b\x99\xeb\xe0\x62\x17\x76\x73\xc2\x01\x97\x9e\x90\x70\x38\xf8\xf6\x7e\x37\x84\x2a\x86\x2c\xca\x10\x43\xe1\xc6\x83\x26\x27\xbc\x7f\x58\x3e\x74\x31\x62\x6f\x59\xca\xb2\xe2\x38\xf1\x3c\x03\xee\xc7\x23\xac\xce\xd2\xe5\x1d\x10\x2b\x49\xb3\xd9\x07\x15\x7e\x51\x4a\x83\xcd\x3c\xb4\x47\xd2\xda\x6d\xfa\x7d\xdb\x37\x07\x0c\xb6\x99\xbf\xea\x91\x49\x8d\xdd\x3f\x00\x00\xff\xff\xb5\x38\xa5\xc8\x75\x00\x00\x00")

func configChainstorageSolanaMainnetLocalYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageSolanaMainnetLocalYml,
		"config/chainstorage/solana/mainnet/local.yml",
	)
}

func configChainstorageSolanaMainnetLocalYml() (*asset, error) {
	bytes, err := configChainstorageSolanaMainnetLocalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/solana/mainnet/local.yml", size: 117, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configChainstorageSolanaMainnetProductionYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x31\x4f\xc3\x30\x10\xc5\xf1\xdd\x9f\xe2\xa9\xcc\xb1\x22\x3a\xa0\x7a\x2e\x03\x0b\x5d\xb2\x57\x97\xf3\x35\xb5\x6a\x9f\x23\x9f\x43\xe1\xdb\xa3\x56\x08\xbd\xf5\xfd\x7f\x2f\x98\xae\xc9\x70\x49\x59\x90\x0c\x8b\xa8\x34\xea\x12\x31\xff\x60\x57\xe8\x26\xe0\xaa\x97\xb4\xec\x3c\x8e\x27\x7c\x9e\x26\xbc\x1f\x3f\x26\xef\xe8\x6e\xc1\x01\x74\xb7\x33\x31\xd7\x4d\x7b\xc0\xda\x6a\xdc\xb8\xa7\xaa\x0e\x98\x37\xbe\x49\x0f\x90\x6f\x2a\x6b\x96\x81\xaf\x94\xd4\x7a\x6d\xb4\xc8\x60\x35\x93\xd2\x50\x28\xa9\x4a\x1f\x1e\xa1\x63\x8a\xa2\x2c\x4f\x35\xc6\x26\x66\x01\x5d\xca\x5a\x1b\x65\xff\xa7\x78\xae\x25\xbc\xbd\xee\xf7\xce\xa4\x7d\x49\x7b\x9c\xe7\xa4\xf1\xfc\x5f\x8c\xfe\xb9\x70\x18\x0f\xa3\xfb\x0d\x00\x00\xff\xff\x65\xd1\xb9\x68\xdd\x00\x00\x00")

func configChainstorageSolanaMainnetProductionYmlBytes() ([]byte, error) {
	return bindataRead(
		_configChainstorageSolanaMainnetProductionYml,
		"config/chainstorage/solana/mainnet/production.yml",
	)
}

func configChainstorageSolanaMainnetProductionYml() (*asset, error) {
	bytes, err := configChainstorageSolanaMainnetProductionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/chainstorage/solana/mainnet/production.yml", size: 221, mode: os.FileMode(420), modTime: time.Unix(1640048354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"config/chainstorage/arbitrum/mainnet/base.yml":         configChainstorageArbitrumMainnetBaseYml,
	"config/chainstorage/arbitrum/mainnet/development.yml":  configChainstorageArbitrumMainnetDevelopmentYml,
	"config/chainstorage/arbitrum/mainnet/local.yml":        configChainstorageArbitrumMainnetLocalYml,
	"config/chainstorage/arbitrum/mainnet/production.yml":   configChainstorageArbitrumMainnetProductionYml,
	"config/chainstorage/avacchain/mainnet/base.yml":        configChainstorageAvacchainMainnetBaseYml,
	"config/chainstorage/avacchain/mainnet/development.yml": configChainstorageAvacchainMainnetDevelopmentYml,
	"config/chainstorage/avacchain/mainnet/production.yml":  configChainstorageAvacchainMainnetProductionYml,
	"config/chainstorage/bitcoin/mainnet/base.yml":          configChainstorageBitcoinMainnetBaseYml,
	"config/chainstorage/bitcoin/mainnet/development.yml":   configChainstorageBitcoinMainnetDevelopmentYml,
	"config/chainstorage/bitcoin/mainnet/local.yml":         configChainstorageBitcoinMainnetLocalYml,
	"config/chainstorage/bitcoin/mainnet/production.yml":    configChainstorageBitcoinMainnetProductionYml,
	"config/chainstorage/bsc/mainnet/base.yml":              configChainstorageBscMainnetBaseYml,
	"config/chainstorage/bsc/mainnet/development.yml":       configChainstorageBscMainnetDevelopmentYml,
	"config/chainstorage/bsc/mainnet/local.yml":             configChainstorageBscMainnetLocalYml,
	"config/chainstorage/bsc/mainnet/production.yml":        configChainstorageBscMainnetProductionYml,
	"config/chainstorage/dogecoin/mainnet/base.yml":         configChainstorageDogecoinMainnetBaseYml,
	"config/chainstorage/dogecoin/mainnet/development.yml":  configChainstorageDogecoinMainnetDevelopmentYml,
	"config/chainstorage/dogecoin/mainnet/local.yml":        configChainstorageDogecoinMainnetLocalYml,
	"config/chainstorage/dogecoin/mainnet/production.yml":   configChainstorageDogecoinMainnetProductionYml,
	"config/chainstorage/ethereum/goerli/base.yml":          configChainstorageEthereumGoerliBaseYml,
	"config/chainstorage/ethereum/goerli/development.yml":   configChainstorageEthereumGoerliDevelopmentYml,
	"config/chainstorage/ethereum/goerli/local.yml":         configChainstorageEthereumGoerliLocalYml,
	"config/chainstorage/ethereum/goerli/production.yml":    configChainstorageEthereumGoerliProductionYml,
	"config/chainstorage/ethereum/mainnet/base.yml":         configChainstorageEthereumMainnetBaseYml,
	"config/chainstorage/ethereum/mainnet/development.yml":  configChainstorageEthereumMainnetDevelopmentYml,
	"config/chainstorage/ethereum/mainnet/local.yml":        configChainstorageEthereumMainnetLocalYml,
	"config/chainstorage/ethereum/mainnet/production.yml":   configChainstorageEthereumMainnetProductionYml,
	"config/chainstorage/optimism/mainnet/base.yml":         configChainstorageOptimismMainnetBaseYml,
	"config/chainstorage/optimism/mainnet/development.yml":  configChainstorageOptimismMainnetDevelopmentYml,
	"config/chainstorage/optimism/mainnet/local.yml":        configChainstorageOptimismMainnetLocalYml,
	"config/chainstorage/optimism/mainnet/production.yml":   configChainstorageOptimismMainnetProductionYml,
	"config/chainstorage/polygon/mainnet/base.yml":          configChainstoragePolygonMainnetBaseYml,
	"config/chainstorage/polygon/mainnet/development.yml":   configChainstoragePolygonMainnetDevelopmentYml,
	"config/chainstorage/polygon/mainnet/local.yml":         configChainstoragePolygonMainnetLocalYml,
	"config/chainstorage/polygon/mainnet/production.yml":    configChainstoragePolygonMainnetProductionYml,
	"config/chainstorage/solana/mainnet/base.yml":           configChainstorageSolanaMainnetBaseYml,
	"config/chainstorage/solana/mainnet/development.yml":    configChainstorageSolanaMainnetDevelopmentYml,
	"config/chainstorage/solana/mainnet/local.yml":          configChainstorageSolanaMainnetLocalYml,
	"config/chainstorage/solana/mainnet/production.yml":     configChainstorageSolanaMainnetProductionYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"config": &bintree{nil, map[string]*bintree{
		"chainstorage": &bintree{nil, map[string]*bintree{
			"arbitrum": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageArbitrumMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageArbitrumMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageArbitrumMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageArbitrumMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"avacchain": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageAvacchainMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageAvacchainMainnetDevelopmentYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageAvacchainMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"bitcoin": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageBitcoinMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageBitcoinMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageBitcoinMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageBitcoinMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"bsc": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageBscMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageBscMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageBscMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageBscMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"dogecoin": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageDogecoinMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageDogecoinMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageDogecoinMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageDogecoinMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"ethereum": &bintree{nil, map[string]*bintree{
				"goerli": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageEthereumGoerliBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageEthereumGoerliDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageEthereumGoerliLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageEthereumGoerliProductionYml, map[string]*bintree{}},
				}},
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageEthereumMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageEthereumMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageEthereumMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageEthereumMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"optimism": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageOptimismMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageOptimismMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageOptimismMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageOptimismMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"polygon": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstoragePolygonMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstoragePolygonMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstoragePolygonMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstoragePolygonMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
			"solana": &bintree{nil, map[string]*bintree{
				"mainnet": &bintree{nil, map[string]*bintree{
					"base.yml":        &bintree{configChainstorageSolanaMainnetBaseYml, map[string]*bintree{}},
					"development.yml": &bintree{configChainstorageSolanaMainnetDevelopmentYml, map[string]*bintree{}},
					"local.yml":       &bintree{configChainstorageSolanaMainnetLocalYml, map[string]*bintree{}},
					"production.yml":  &bintree{configChainstorageSolanaMainnetProductionYml, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
