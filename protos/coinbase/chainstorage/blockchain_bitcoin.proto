syntax = "proto3";

package coinbase.chainstorage;

option go_package = "github.com/coinbase/chainstorage/protos/coinbase/chainstorage";

import "google/protobuf/timestamp.proto";

message BitcoinBlobdata {
  bytes header = 1;
  repeated RepeatedBytes input_transactions = 2;
}

message RepeatedBytes {
  repeated bytes data = 1;
}

// BitcoinHeader https://developer.bitcoin.org/reference/rpc/getblock.html
message BitcoinHeader {
  string hash = 1;
  // uint64 confirmations = 2; // confirmations is a transient state, so not exposing
  uint64 stripped_size = 3;
  uint64 size = 4;
  uint64 weight = 5;
  uint64 height = 6;
  uint64 version = 7;
  string version_hex = 8;
  string merkle_root = 9;
  uint64 time = 10;
  uint64 median_time = 11;
  uint64 nonce = 12;
  string bits = 13;
  string difficulty = 14;
  string chain_work = 15;
  uint64 number_of_transactions = 16;
  string previous_block_hash = 17;
  string next_block_hash = 18;
  google.protobuf.Timestamp timestamp = 19;
}

// BitcoinTransaction https://developer.bitcoin.org/reference/rpc/getrawtransaction.html
message BitcoinTransaction {
  // bool in_active_chain = 1;
  string hex = 2;
  // transaction_id should be the identifier for a transaction.
  string transaction_id = 3;
  // The transaction hash (differs from txid for witness transactions)
  string hash = 4;
  uint64 size = 5;
  uint64 virtual_size = 6;
  uint64 weight = 7;
  uint64 version = 8;
  uint64 lock_time = 9;
  repeated BitcoinTransactionInput inputs = 10;
  repeated BitcoinTransactionOutput outputs = 11;
  string block_hash = 12;
  // uint64 confirmations = 13;
  uint64 block_time = 14;
  uint64 time = 15;
  bool is_coinbase = 16;
  uint64 index = 17;
  uint64 input_count = 18;
  uint64 output_count = 19;
  uint64 input_value = 20;
  uint64 output_value = 21;
  uint64 fee = 22;
}

message BitcoinTransactionInput {
  string coinbase = 1;
  string transaction_id = 2;
  uint64 from_output_index = 3;
  BitcoinScriptSignature script_signature = 4;
  uint64 sequence = 5;
  repeated string transaction_input_witnesses = 6;
  BitcoinTransactionOutput from_output = 7;
  uint64 index = 8;
}

message BitcoinScriptSignature {
  string assembly = 1;
  string hex = 2;
}

message BitcoinTransactionOutput {
  // double value = 1;
  uint64 index = 2;
  BitcoinScriptPublicKey script_public_key = 3;
  uint64 value = 4;
}

message BitcoinScriptPublicKey {
  string assembly = 1;
  string hex = 2;
  // uint64 required_signatures = 3; // deprecated: https://github.com/bitcoin/bitcoin/pull/20286
  string type = 4;
  // repeated string addresses = 5; // deprecated: https://github.com/bitcoin/bitcoin/pull/20286
  string address = 6;
}

message BitcoinBlock {
  BitcoinHeader header = 1;
  repeated BitcoinTransaction transactions = 2;
}
